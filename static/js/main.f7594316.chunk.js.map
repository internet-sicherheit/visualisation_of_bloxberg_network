{"version":3,"sources":["modules/address_viewer/code/TableCreator.js","modules/address_viewer/code/AddressViewer.js","modules/vbn/code/DataCollector.js","modules/vbn/code/GraphCreator.js","modules/vbn/code/VBN.js","App.js","serviceWorker.js","index.js"],"names":["TableCreator","props","responseObject","console","log","className","Component","AddressViewer","state","address","table","this","id","class","type","placeholder","aria-label","aria-describedby","onClick","document","getElementById","value","setState","window","alert","DataCollector","transactionMap","tempMap","Map","page","offset","depth","setLoadingbar","getContractList","contractList","getTransactionFromContractList","copyMap","round","deepSearch","innerHTML","convertMapToArray","url","fetch","then","response","json","result","counter","contract","Address","arrays","length","Object","keys","array","i","from","to","mapContains","isContract","source","target","sourceType","targetType","set","p","Math","map","entry","size","addCounter","temp","Web3","require","web3","providers","HttpProvider","eth","getCode","Array","forEach","key","push","sourceMap","x","y","has","prozent","style","width","React","GraphCreator","zoomEnable","promise","graphBoxHeight","innerHeight","offsetHeight","height","innerWidth","links","nodes","link","nodeAddress","typeSource","typeTarget","svgWidth","offsetWidth","svgHeight","zoom","d3","on","svg","attr","translate","scale","append","call","force","e","node","d","drag","linkDistance","charge","index","start","selectAll","data","enter","select","floor","Date","now","startTime","endTime","visibility","scrollIntoView","behavior","block","inline","onresize","getElementsByTagName","timeStap","showLoader","getData","hideLoader","createGraph","calculationTime","scrollAnimation","widthResizeListener","nextProps","VBN","graph","pageSelectOptions","offsetSelectOptions","depthSelectOptions","href","defaultValue","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f7594316.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport '../../../bootstrap.min.css';\r\n\r\nclass TableCreator extends Component {\r\n    \r\n    responseObject = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Consturctor:\")\r\n        console.log(props);\r\n        this.responseObject = null;\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillUpdate() {\r\n\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div className=\"TableCreator\">\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TableCreator;","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport '../../../bootstrap.min.css';\r\nimport TableCreator from './TableCreator';\r\n\r\nclass AddressViewer extends Component {\r\n\r\n  state = {\r\n    address: null\r\n  };\r\n\r\n  render() {\r\n\r\n    let table = (this.state.address !== \"\") ? <TableCreator address={this.state.address} /> : null;\r\n\r\n    return (\r\n      <div className=\"AddressViewer\">\r\n\r\n        <div id=\"banner\">\r\n          <h1 className=\"title\">Adderss Viewer</h1>\r\n        </div>\r\n\r\n        <div id=\"searchbar\">\r\n          <div id=\"address_input\">\r\n            <div class=\"input-group mb-3\">\r\n              <input type=\"text\" id=\"input\" class=\"form-control\" placeholder=\"Enter address...\" aria-label=\"Enter address...\" aria-describedby=\"button-addon2\" />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onClick={() => {\r\n\r\n                  let address = document.getElementById(\"input\").value;\r\n\r\n                  if(address != \"\") {\r\n                    console.log(\"address -> \" + address);\r\n\r\n                    this.setState({ address: address });\r\n\r\n                  } else {\r\n                    window.alert(\"Inputfield is empty.\");\r\n                  }\r\n\r\n                }}>Search</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"table_box\">\r\n          {table}\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default AddressViewer;","import React from 'react';\r\n\r\nclass DataCollector extends React.Component {\r\n\r\n    transactionMap = null;\r\n    tempMap = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.transactionMap = new Map();\r\n        this.tempMap = new Map();\r\n    }\r\n\r\n    async getData(page, offset, depth) {\r\n\r\n        this.setLoadingbar(0);\r\n\r\n        this.transactionMap = new Map();\r\n        this.tempMap = new Map();\r\n\r\n        // get contract list\r\n        console.log(\"Function - getContractList(page, offsett):\");\r\n        let contractList = await this.getContractList(page, offset);\r\n        console.log(\"CONTRACTLIST:\");\r\n        console.log(contractList);\r\n\r\n        // get transactions from contract list\r\n        console.log(\"Function - getTransactionFromContractList(contractList):\");\r\n        await this.getTransactionFromContractList(contractList);\r\n        console.log(\"TRANSACTIONMAP BEFORE DEEEP SEARCH:\");\r\n        console.log(this.transactionMap);\r\n\r\n        // search deeper into network\r\n        console.log(\"Function - deepSearch(depth, round):\");\r\n        this.tempMap = await this.copyMap(this.transactionMap);\r\n        if (depth != 0) {\r\n            for (let round = 1; round <= depth; round++) {\r\n                await this.deepSearch(depth, round);\r\n            }\r\n            console.log(\"TRANSACTIONMAP AFTER DEEEP SEARCH:\");\r\n            console.log(this.transactionMap);\r\n        }\r\n\r\n        document.getElementById(\"loading_informaiton\").innerHTML = \"Loading...\";\r\n\r\n        return this.convertMapToArray(this.transactionMap);\r\n    }\r\n\r\n    async getContractList(page, offset) {\r\n\r\n        const url = 'https://blockexplorer.bloxberg.org/api/api?module=contract&action=listcontracts&page=' + page + '&offset=' + offset;\r\n\r\n        let contractList = await fetch(url).then(response => response.json());\r\n\r\n        return contractList.result;\r\n    }\r\n\r\n    async getTransactionFromContractList(contractList) {\r\n\r\n        console.log(\"Searching for contract transactions:\");\r\n        \r\n        let counter = 1;\r\n        for (const contract of contractList) {\r\n            let url = 'https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=';\r\n            url = url + contract.Address;\r\n\r\n            let arrays = await fetch(url).then(json => json.json());\r\n\r\n            let length = Object.keys(arrays.result).length;\r\n            let array = arrays.result;\r\n\r\n            console.log(\"   Recived \" + length + \" Transaction entries.\");\r\n\r\n            for (let i = 0; i < length; i++) {\r\n\r\n                if (array[i].from !== \"\" && array[i].to !== \"\" && !this.mapContains(this.transactionMap, array[i].from, array[i].to)) {\r\n                    this.transactionMap.set(\r\n                        array[i].from + array[i].to,\r\n                        {\r\n                            source: array[i].from,\r\n                            target: array[i].to,\r\n                            sourceType: ((await this.isContract(array[i].from)) ? \"Contract\" : \"Account\"),\r\n                            targetType: \"Contract\"\r\n                        }\r\n                    )\r\n                    console.log(\"      Transaction entry number \" + (i + 1) + \" added.\");\r\n                }\r\n            }\r\n\r\n            let p = Math.round(counter * 100 / contractList.length * 100) / 100;\r\n            this.setLoadingbar(p);\r\n\r\n            counter++;\r\n        }\r\n        \r\n        this.setLoadingbar(0);\r\n    }\r\n\r\n    async deepSearch(depth, round) {\r\n\r\n        let map = this.copyMap(this.tempMap);\r\n        this.tempMap = new Map();\r\n\r\n        let counter = 1;\r\n\r\n        console.log(\"DEEP SEARCH ROUND \" + round + \"/\" + depth);\r\n\r\n        for (const entry of map) {\r\n\r\n            console.log(\"   Look up for map entry \" + counter + \" of \" + map.size);\r\n\r\n            document.getElementById(\"loading_informaiton\").innerHTML = \"Address look up (\" + counter + \"/\" + map.size + \")<br>Depth search level (\" + round + \"/\" + depth + \")\";\r\n\r\n            let url = 'https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=';\r\n            url = url + entry[1].source;\r\n\r\n            console.log(\"      Searching transactions for address \" + entry[1].source + \" ...\");\r\n\r\n            let arrays = await fetch(url).then(json => json.json());\r\n\r\n            let length = Object.keys(arrays.result).length;\r\n            let array = arrays.result;\r\n\r\n            console.log(\"         Recived \" + length + \" Transaction entries.\");\r\n\r\n            let addCounter = 1;\r\n            for (let i = 0; i < length; i++) {\r\n\r\n                if (array[i].to !== entry[1].source) {\r\n                    let temp = array[i].from;\r\n                    array[i].from = array[i].to;\r\n                    array[i].to = temp;\r\n                }\r\n\r\n                if (array[i].from !== \"\" && array[i].to !== \"\" && !this.mapContains(this.transactionMap, array[i].from, array[i].to)) {\r\n\r\n                    this.transactionMap.set(\r\n                        array[i].from + array[i].to,\r\n                        {\r\n                            source: array[i].from,\r\n                            target: array[i].to,\r\n                            sourceType: (await this.isContract(array[i].from) ? \"Contract\" : \"Account\"),\r\n                            targetType: (await this.isContract(array[i].to) ? \"Contract\" : \"Account\")\r\n                        }\r\n                    );\r\n                    this.tempMap.set(\r\n                        array[i].from + array[i].to,\r\n                        {\r\n                            source: array[i].from,\r\n                            target: array[i].to,\r\n                            sourceType: (await this.isContract(array[i].from) ? \"Contract\" : \"Account\"),\r\n                            targetType: (await this.isContract(array[i].to) ? \"Contract\" : \"Account\")\r\n                        }\r\n                    );\r\n                    console.log(\"            Transaction entry number \" + addCounter + \" added.\");\r\n\r\n                    let p = Math.round(addCounter * 100 / length * 100) / 100;\r\n                    this.setLoadingbar(p);\r\n                }\r\n                addCounter++;\r\n            }\r\n            addCounter = 1;\r\n            counter++;\r\n\r\n            this.setLoadingbar(0);\r\n        }\r\n\r\n        console.log(\"----- MAP for round \" + round + \" -----\");\r\n        console.log(map);\r\n        console.log(\"---------------------------\");\r\n    }\r\n\r\n    async isContract(address) {\r\n\r\n        let isContract = true;\r\n\r\n        const Web3 = require('web3');\r\n        const web3 = new Web3(new Web3.providers.HttpProvider('https://core.bloxberg.org/'));\r\n        let result = await web3.eth.getCode(address);\r\n\r\n        if(result === \"0x\") {\r\n            isContract = false;\r\n        }\r\n\r\n        return isContract;\r\n    }\r\n\r\n    convertMapToArray(map) {\r\n        let array = new Array();\r\n\r\n        map.forEach((value, key) => {\r\n            array.push({ source: value.source, target: value.target, sourceType: value.sourceType, targetType: value.targetType });\r\n        });\r\n\r\n        return array;\r\n    }\r\n\r\n    copyMap(sourceMap) {\r\n        let map = new Map();\r\n\r\n        for (const entry of sourceMap) {\r\n            map.set(entry[1].source + entry[1].target, { source: entry[1].source, target: entry[1].target, sourceType: entry[1].sourceType, targetType: entry[1].targetType });\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    mapContains(map, x, y) {\r\n        return map.has(x + y) || map.has(y + x);\r\n    }\r\n\r\n    setLoadingbar(prozent) {\r\n        document.getElementById(\"progress\").style.width = prozent + \"%\";\r\n        document.getElementById(\"progress\").innerHTML = prozent + \"%\";\r\n    }\r\n\r\n}\r\n\r\nexport default DataCollector;","import React, {Component} from 'react';\r\nimport * as d3 from 'd3';\r\nimport './styles.css';\r\nimport DataCollector from './DataCollector';\r\n\r\nclass GraphCreator extends Component {\r\n\r\n    responseObject = null;\r\n    zoomEnable = true;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Consturctor:\")\r\n        console.log(props);\r\n        this.responseObject = new DataCollector();\r\n    }\r\n\r\n    createGraph(promise) {\r\n        console.log(\"Function - createGraph():\");\r\n\r\n        let graphBoxHeight = window.innerHeight - document.getElementById(\"address_information\").offsetHeight;\r\n        document.getElementById(\"graph_box\").style.height = graphBoxHeight + \"px\";\r\n\r\n        let height = graphBoxHeight;\r\n        let width = window.innerWidth;\r\n\r\n        console.log(\"PROMISE:\");\r\n        console.log(promise);\r\n\r\n        let links = promise;\r\n\r\n        console.log(\"LINKS:\");\r\n        console.log(links);\r\n\r\n        // create empty nodes array\r\n        let nodes = {};\r\n\r\n        // compute nodes from links data\r\n        links.forEach(function (link) {\r\n            link.source = nodes[link.source] ||\r\n                (nodes[link.source] = { nodeAddress: link.source, source: link.source, target: link.target, typeSource: link.sourceType, typeTarget: link.targetType });\r\n            link.target = nodes[link.target] ||\r\n                (nodes[link.target] = { nodeAddress: link.target, source: link.source, target: link.target, typeSource: link.sourceType, typeTarget: link.targetType });\r\n        });\r\n\r\n        console.log(\"NODES:\");\r\n        console.log(nodes);\r\n\r\n        let svgWidth = document.getElementById(\"address_information\").offsetWidth - 2;\r\n        let svgHeight = height - 20;\r\n\r\n        let zoom = d3.behavior.zoom().on(\"zoom\", updateZoom);\r\n\r\n        document.getElementById(\"container\").innerHTML = \"\";\r\n        // add a SVG to the body for our viz\r\n        let svg = d3.select('#container').append('svg')\r\n            .attr('width', svgWidth)\r\n            .attr('height', svgHeight)\r\n            .style(\"cursor\", \"move\")\r\n            .call(zoom)\r\n            .append(\"g\");\r\n\r\n\r\n        // use the force\r\n        let force = d3.layout.force() //build the layout\r\n            .size([svgWidth, svgHeight]) //specified earlier\r\n            .nodes(d3.values(nodes)) //add nodes\r\n            .links(links) //add links\r\n            .on(\"tick\", tick) //what to do\r\n            .linkDistance(300) //set for proper svg size\r\n            .charge(function (d) {\r\n                var charge = -200;\r\n                if (d.index === 0) charge = 2.5 * charge;\r\n                return charge;\r\n            })\r\n            .start(); //kick the party off!\r\n\r\n        // add the links\r\n        let link = svg.selectAll('.link')\r\n            .data(links)\r\n            .enter().append('line')\r\n            .attr('class', 'link');\r\n\r\n        // add the nodes\r\n        let node = svg.selectAll('.node')\r\n            .data(force.nodes()) //add\r\n            .enter().append('circle')\r\n            .style(\"cursor\", \"auto\")\r\n            .style(\"fill\", function (d) {\r\n                if (d.nodeAddress === d.source) {\r\n                    if (d.typeSource === \"Contract\") {\r\n                        return \"orange\";\r\n                    }\r\n                }\r\n                if (d.nodeAddress === d.target) {\r\n                    if (d.typeTarget === \"Contract\") {\r\n                        return \"orange\";\r\n                    }\r\n                }\r\n            })\r\n            .attr('class', 'node')\r\n            .attr('r', width * 0.005) //radius of circle\r\n            .on(\"click\", function (d) {\r\n                console.log(d);\r\n                if (d.nodeAddress === d.source) {\r\n                    document.getElementById(\"address_information\").innerHTML =\r\n                            \" <p class='labels'>Type:</p><p class='values'>\" + d.typeSource + \"</p>\"\r\n                            + \"<p class='labels'>Address:</p><p class='values'><a href='https://blockexplorer.bloxberg.org/address/\" + d.source + \"' target='_blank'>\" + d.source + \"</a></p>\";\r\n                }\r\n                if(d.nodeAddress === d.target) {\r\n                    document.getElementById(\"address_information\").innerHTML =\r\n                            \" <p class='labels'>Type:</p><p class='values'>\" + d.typeTarget + \"</p>\"\r\n                            + \"<p class='labels'>Address:</p><p class='values'><a href='https://blockexplorer.bloxberg.org/address/\" + d.target + \"' target='_blank'>\" + d.target + \"</a></p>\";\r\n                }\r\n            })\r\n            .on(\"mousedown\", function (d) {\r\n\r\n                console.log(\"----- Node Information -----\");\r\n                console.log(\"nodeAddress: \" + d.nodeAddress);\r\n                console.log(\"source: \" + d.source);\r\n                console.log(\"target: \" + d.target);\r\n                console.log(\"typeSource:   \" + d.typeSource);\r\n                console.log(\"typeTarget:   \" + d.typeTarget);\r\n\r\n                this.zoomEnable = false;\r\n                // console.log(\"ZoomEnabled? \" + this.zoomEnable);\r\n                d3.select('#container').select('svg').call(d3.behavior.zoom().on(\"zoom\", null));\r\n            })\r\n            .on(\"mouseup\", function () {\r\n                this.zoomEnable = true;\r\n                // console.log(\"ZoomEnabled? \" + this.zoomEnable);\r\n                d3.select('#container').select('svg').call(zoom);\r\n            })\r\n            .on(\"focus\", function () {\r\n                d3.select(this).style(\"border-color\", \"red\"); // fehlerhaft\r\n            });\r\n\r\n        function tick(e) {\r\n\r\n            node.attr('cx', function (d) { return d.x; })\r\n                .attr('cy', function (d) { return d.y; })\r\n                .call(force.drag);\r\n\r\n            link.attr('x1', function (d) { return d.source.x; })\r\n                .attr('y1', function (d) { return d.source.y; })\r\n                .attr('x2', function (d) { return d.target.x; })\r\n                .attr('y2', function (d) { return d.target.y; });\r\n        }\r\n\r\n        function updateZoom() {\r\n            svg.attr(\"transform\",\r\n                \"translate(\" + d3.event.translate + \")\"\r\n                + \" scale(\" + d3.event.scale + \")\");\r\n        }\r\n\r\n        console.log(\"Graph drawed.\");\r\n    }\r\n\r\n    timeStap() {\r\n        return Math.floor(Date.now());\r\n    }\r\n    calculationTime(startTime, endTime) {\r\n        console.log(\"Graph created in \" + (endTime - startTime) / 1000 + \" seconds.\");\r\n    }\r\n\r\n    showLoader() {\r\n        document.getElementById(\"address_information\").innerHTML = \"Select a node for node information.\";\r\n        document.getElementById(\"address_information\").style.visibility = \"hidden\";\r\n        document.getElementById(\"container\").style.visibility = \"hidden\";\r\n        document.getElementById(\"loader\").style.visibility = \"visible\";\r\n    }\r\n\r\n    hideLoader() {\r\n        document.getElementById(\"address_information\").style.visibility = \"visible\";\r\n        document.getElementById(\"container\").style.visibility = \"visible\";\r\n        document.getElementById(\"loader\").style.visibility = \"hidden\";\r\n        document.getElementById(\"progress\").style.width = \"0%\";\r\n        document.getElementById(\"progress\").innerHTML = \"0%\";\r\n    }\r\n\r\n    scrollAnimation() {\r\n        document.getElementById(\"address_information\").scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"start\",\r\n            inline: \"nearest\"\r\n        });\r\n    }\r\n\r\n    widthResizeListener() {\r\n        window.onresize = function () {\r\n            document.getElementsByTagName(\"svg\")[0].style.width = document.getElementById(\"address_information\").offsetWidth - 2;\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        console.log(\"Component will mount.\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Component did mount.\");\r\n\r\n        let startTime = this.timeStap();\r\n\r\n        this.showLoader();\r\n        this.responseObject.getData(this.props.page, this.props.offset, this.props.depth).then((promise) => {\r\n            this.hideLoader();\r\n            this.createGraph(promise);\r\n\r\n            let endTime = this.timeStap();\r\n            this.calculationTime(startTime, endTime);\r\n\r\n            this.scrollAnimation();\r\n            this.widthResizeListener();\r\n        });\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        console.log(\"Component will update.\");\r\n\r\n        let startTime = this.timeStap();\r\n\r\n        this.showLoader();\r\n        this.responseObject.getData(nextProps.page, nextProps.offset, nextProps.depth).then((promise) => {\r\n            this.hideLoader();\r\n            this.createGraph(promise);\r\n\r\n            let endTime = this.timeStap();\r\n            this.calculationTime(startTime, endTime);\r\n\r\n            this.scrollAnimation();\r\n            this.widthResizeListener();\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"Component did update.\");\r\n    }\r\n\r\n    render() {\r\n        return (<div id=\"container\"></div>);\r\n    }\r\n}\r\n\r\nexport default GraphCreator;","import React, {Component} from 'react';\r\nimport './styles.css';\r\nimport GraphCreator from './GraphCreator';\r\n\r\nclass VBN extends Component {\r\n\r\n    state = {\r\n      page: 0,\r\n      offset: 0,\r\n      depth: 0\r\n    };\r\n  \r\n    render() {\r\n  \r\n      let graph = (this.state.page !== 0) ? <GraphCreator page={this.state.page} offset={this.state.offset} depth={this.state.depth} /> : null;\r\n  \r\n      const maxPage = 100;\r\n      const maxOffset = 1800;\r\n      const maxDepth = 5;\r\n  \r\n      const pageSelectedValue = 2;\r\n      const offsetSelectedValue = 1;\r\n      const depthSelectedValue = 0;\r\n  \r\n      const pageSelectOptions = [];\r\n      for(let i = 1; i <= maxPage; i++) {\r\n        pageSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n      }\r\n      const offsetSelectOptions = [];\r\n      for(let i = 1; i <= maxOffset; i++) {\r\n        offsetSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n      }\r\n      const depthSelectOptions = [];\r\n      for(let i = 0; i <= maxDepth; i++) {\r\n        depthSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n      }\r\n  \r\n      return (\r\n        <div className=\"VBN\">\r\n          <div id=\"banner\">\r\n            <h1 className=\"title\">Visualisation of Bloxberg-Network</h1>\r\n          </div>\r\n          <div id=\"site_informaiton\">\r\n            <p>This website will produce a force directed d3 graph, that will visualizise the Bloxberg Network<br/>\r\n            by using the <a href=\"https://blockexplorer.bloxberg.org/api_docs\" target=\"_blank\">Bloxberg RPC API</a> and the <a href=\"https://web3js.readthedocs.io/en/v1.3.0/\" target=\"_blank\">Web3</a> framework for JavaScript.</p>\r\n          </div>\r\n          <div id=\"values_informaiton\">\r\n            <p id=\"text\">\r\n              <b>Page</b> represents the page number to be used for pagination.\r\n            </p>\r\n            <p id=\"text\">\r\n              <b>Offset</b> represents the maximum number of records to return when paginating.\r\n            </p>\r\n            <p id=\"text\">\r\n              <b>Depth</b> represents how deep the http requests will search into to network.\r\n            </p>\r\n          </div>\r\n          <div id=\"control\">\r\n            <label>Page:</label>\r\n            <select id=\"page_selection\" defaultValue={pageSelectedValue}>\r\n              {pageSelectOptions}\r\n            </select>\r\n            <label>Offset:</label>\r\n            <select id=\"offset_selection\" defaultValue={offsetSelectedValue}>\r\n              {offsetSelectOptions}\r\n            </select>\r\n            <label>Depth:</label>\r\n            <select id=\"depth_selection\" defaultValue={depthSelectedValue}>\r\n              {depthSelectOptions}\r\n            </select>\r\n            <input type=\"submit\" id=\"button\" value=\"Create Graph\" onClick={() => {\r\n  \r\n              let page = document.getElementById(\"page_selection\").value;\r\n              let offset = document.getElementById(\"offset_selection\").value;\r\n              let depth = document.getElementById(\"depth_selection\").value;\r\n  \r\n              console.log(\"page -> \" + page);\r\n              console.log(\"offset -> \" + offset);\r\n              console.log(\"depth -> \" + depth);\r\n  \r\n              this.setState({ page: page, offset: offset, depth: depth});\r\n              \r\n            }} />\r\n          </div>\r\n          <div id=\"loader\" style={{visibility: \"visable\"}}>\r\n            <div id=\"progressbar\">\r\n              <div id=\"progress\"></div>\r\n              <p id=\"loading_informaiton\">Loading...</p>\r\n            </div>\r\n          </div>\r\n          <div id=\"address_information\">\r\n            <p class=\"labels\">Select a node for node information.</p>\r\n          </div>\r\n          <div id=\"graph_box\">\r\n            {graph}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  export default VBN;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport './App.css';\r\nimport AddressViewer from './modules/address_viewer/code/AddressViewer';\r\nimport VBN from './modules/vbn/code/VBN';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n\r\n        <div className=\"App\">\r\n\r\n        <div id=\"navigation\">\r\n            <nav>\r\n              <ul id=\"nav-links\">\r\n                <Link to=\"/AddressViewer\" class=\"link\">\r\n                  <li>AddressViewer</li>\r\n                </Link>\r\n                <Link to=\"/VBN\" class=\"link\">\r\n                  <li>VBN</li>\r\n                </Link>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n\r\n          <Switch>\r\n            <Route path=\"/AddressViewer\" exact component={AddressViewer} />\r\n            <Route path=\"/VBN\" exact component={VBN} />\r\n          </Switch>\r\n\r\n        </div>\r\n\r\n      </Router>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}