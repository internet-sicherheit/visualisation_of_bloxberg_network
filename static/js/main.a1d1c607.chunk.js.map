{"version":3,"sources":["modules/address_viewer/code/model/AddressManager.js","modules/address_viewer/code/model/Transaction.js","modules/address_viewer/code/DataFetcher.js","modules/address_viewer/code/TableCreator.js","modules/address_viewer/code/AddressViewer.js","modules/vbn/code/DataCollector.js","modules/vbn/code/GraphCreator.js","modules/vbn/code/VBN.js","App.js","serviceWorker.js","index.js"],"names":["AddressManager","address","name","type","status","transactionMap","this","Map","console","log","map","value","get","senderAddress","set","senderName","receiverAddress","receiverName","txCount","obj","addresses","transactions","i","length","push","Transaction","timeStamp","input","senderStatus","receiverStatus","DataFetcher","props","Web3Url","URLTransactionList","URLTransactionInfo","addressLookUpMap","web3Url","URLContractSourceCode","initAddressManager","addressManager","saveTransactions","isContract","isVerifiedContract","isVerified","getContractName","contractName","getAccountName","accountName","adderss","fetch","then","response","json","result","transactionHash","resolvedAddress","getTransactions","Object","keys","resultArray","from","lookUpName","to","convertTime","parseInt","percent","Math","round","document","getElementById","innerHTML","style","width","Web3","require","web3","providers","HttpProvider","eth","getCode","ContractName","text","httpText","match","substring","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","decodeData","array","base62","charset1","indexCharset","encode","str","byteToHex","byteArray","Array","byte","toString","slice","join","React","Component","TableCreator","htmlCode","responseObject","promise","renderTableSummary","transactionSummary","getTransactionSummaryMap","addToHTMLCode","rowCounter","v","selection","code","headlines","forEach","key","scrollIntoView","behavior","block","inline","show","infoElements","getElementsByClassName","display","showInformation","showLoader","showTable","fetchData","renderData","scrollAnimation","nextProps","className","id","class","renderTableAllTransactions","AddressViewer","state","table","onClick","setState","window","alert","DataCollector","tempMap","page","offset","depth","setLoadingbar","getContractList","contractList","getTransactionFromContractList","copyMap","deepSearch","convertMapToArray","url","counter","contract","Address","arrays","mapContains","source","target","sourceType","targetType","p","entry","size","addCounter","temp","sourceMap","x","y","has","prozent","GraphCreator","zoomEnable","graphBoxHeight","innerHeight","offsetHeight","height","innerWidth","links","nodes","link","nodeAddress","typeSource","typeTarget","svgWidth","offsetWidth","svgHeight","zoom","d3","on","svg","attr","translate","scale","append","call","force","e","node","d","drag","linkDistance","charge","index","start","selectAll","data","enter","select","floor","now","startTime","endTime","visibility","onresize","getElementsByTagName","timeStap","getData","hideLoader","createGraph","calculationTime","widthResizeListener","VBN","graph","pageSelectOptions","offsetSelectOptions","depthSelectOptions","href","defaultValue","App","path","exact","component","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a1d1c607.chunk.js","sourcesContent":["import { findAllByPlaceholderText } from \"@testing-library/react\";\r\n\r\nexport default class AddressManager {\r\n\r\n    address = null;\r\n    name = null;\r\n    type = null;\r\n    status = null;\r\n\r\n    transactionMap = null;\r\n\r\n    constructor(address, name, type, status) {\r\n        this.address = address;\r\n        this.name = name;\r\n        this.type = type;\r\n        this.status = status;\r\n\r\n        this.transactionMap = new Map();\r\n    }\r\n\r\n    getTransactionSummaryMap() {\r\n\r\n        console.log(\"getTransactionSummaryMap:\");\r\n\r\n        let map = new Map();\r\n\r\n        for (let [key, value] of this.transactionMap) {\r\n            // console.log(key, value);\r\n            if(typeof map.get(value.senderAddress) === 'undefined') {\r\n                map.set(value.senderAddress, {senderAddress: value.senderAddress, senderName: value.senderName, receiverAddress: value.receiverAddress, receiverName: value.receiverName, txCount: 1});\r\n            } else {\r\n                let obj = map.get(value.senderAddress);\r\n                map.set(value.senderAddress, {senderAddress: value.senderAddress, senderName: value.senderName, receiverAddress: value.receiverAddress, receiverName: value.receiverName, txCount: obj.txCount + 1});\r\n            }\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    getTransactionsForAddress(addresses) {\r\n\r\n        console.log(\"getTransactionsForAddress:\");\r\n\r\n        let transactions = [];\r\n\r\n        for(let i = 0; i < addresses.length; i++) {\r\n            for (let [key, value] of this.transactionMap) {\r\n                if(value.senderAddress == addresses[i]) {\r\n                    transactions.push(value);\r\n                }\r\n            }\r\n        }\r\n        \r\n        return transactions;\r\n    }\r\n}","export default class Transaction {\r\n\r\n    senderAddress = null;\r\n    senderName = null;\r\n    senderStatus = null;\r\n\r\n    receiverAddress = null;\r\n    receiverName = null;\r\n    receiverStatus = null;\r\n\r\n    timeStamp = null;\r\n    input = null;\r\n\r\n    constructor(senderAddress, senderName, receiverAddress, receiverName, timeStamp, input) {\r\n        this.senderAddress = senderAddress;\r\n        this.senderName = senderName;\r\n        this.receiverAddress = receiverAddress;\r\n        this.receiverName = receiverName;\r\n        this.timeStamp = timeStamp;\r\n        this.input = input;\r\n\r\n        this.senderStatus = (this.senderAddress === this.senderName) ? \"not verified\" : \"verified\";\r\n        this.receiverStatus = (this.receiverAddress === this.receiverName) ? \"not verified\" : \"verified\";\r\n    }\r\n}","import React from 'react';\r\nimport AddressManager from './model/AddressManager';\r\nimport Transaction from './model/Transaction';\r\n\r\nclass DataFetcher extends React.Component {\r\n\r\n    Web3Url = null;\r\n    URLTransactionList = null;\r\n    URLTransactionInfo = null;\r\n\r\n    addressLookUpMap = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.web3Url = \"https://core.bloxberg.org/\";\r\n        this.URLTransactionList = \"https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=\";\r\n        this.URLTransactionInfo = \"https://blockexplorer.bloxberg.org/api/api?module=transaction&action=gettxinfo&txhash=\";\r\n        this.URLContractSourceCode = \"https://blockexplorer.bloxberg.org/api/api?module=contract&action=getsourcecode&address=\";\r\n\r\n        this.addressLookUpMap = new Map();\r\n    }\r\n\r\n    async fetchData(address) {\r\n\r\n        /* console.log(\"getAddressName\");\r\n        console.log(await this.getAccountName(\"0xE5a9654C7e190701016EBf18206020bf16D8Beab\"));\r\n        console.log(\"getTransactions\");\r\n        console.log(await this.getTransactions(\"0xE5a9654C7e190701016EBf18206020bf16D8Beab\"));\r\n        console.log(\"getTransacitonInfo\");\r\n        console.log(await this.getTransactionInfo(\"0x7aa439813cc35a3bf7d5802f0732bb5fef37173f09ef3146a6755df5692a58fe\"));\r\n        console.log(\"isContract?\");\r\n        console.log(await this.isContract(\"0xE5a9654C7e190701016EBf18206020bf16D8Beab\"));\r\n        console.log(\"isVerifiedContract?\");\r\n        console.log(await this.isVerifiedContract(\"0xE5a9654C7e190701016EBf18206020bf16D8Beab\"));\r\n        console.log(\"getContractName\");\r\n        console.log(await this.getContractName(\"0xE5a9654C7e190701016EBf18206020bf16D8Beab\")); */\r\n\r\n        this.addressManager = await this.initAddressManager(address);\r\n        await this.saveTransactions(address);\r\n\r\n        return this.addressManager;\r\n    }\r\n\r\n    async initAddressManager(address) {\r\n\r\n        let addressManager = null;\r\n\r\n        let isContract = await this.isContract(address);\r\n        let isVerified = await this.isVerifiedContract(address);\r\n        let contractName = await this.getContractName(address);\r\n        let accountName = await this.getAccountName(address);\r\n\r\n        console.log(\"isContract: \" + isContract);\r\n        console.log(\"isVerified: \" + isVerified);\r\n        console.log(\"contractName: \" + contractName);\r\n        console.log(\"accountName: \" + accountName);\r\n        console.log(\"address: \" + address);\r\n\r\n        if (isContract === true) {\r\n            addressManager = new AddressManager(address, (contractName == null) ? address : contractName, \"Contract\", isVerified ? \"verified\" : \"not verified\");\r\n            this.addressLookUpMap.set(address, contractName);\r\n        } else {\r\n            addressManager = new AddressManager(address, (accountName == null) ? address : accountName, \"Account\", (accountName == null) ? \"not verified\" : \"verified by validator\");\r\n            this.addressLookUpMap.set(address, accountName);\r\n        }\r\n\r\n        return addressManager;\r\n    }\r\n\r\n    async getTransactions(adderss) {\r\n        let result = await fetch(this.URLTransactionList + adderss).then(response => response.json());\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    async getTransactionInfo(transactionHash) {\r\n        let result = await fetch(this.URLTransactionInfo + transactionHash).then(response => response.json());\r\n        console.log(result);\r\n\r\n        return result;\r\n    }\r\n\r\n    async lookUpName(address) {\r\n        let resolvedAddress = this.addressLookUpMap.get(address);\r\n        if (typeof resolvedAddress === \"undefined\") {\r\n            let isContract = await this.isContract(address);\r\n            if (isContract) {\r\n                let contractName = await this.getContractName(address);\r\n                resolvedAddress = (contractName !== null) ? contractName : address;\r\n                this.addressLookUpMap.set(address, resolvedAddress);\r\n            } else {\r\n                let accountName = await this.getAccountName(address);\r\n                resolvedAddress = (accountName !== null) ? accountName : address;\r\n                this.addressLookUpMap.set(address, resolvedAddress);\r\n            }\r\n        }\r\n\r\n        return resolvedAddress;\r\n    }\r\n\r\n    async saveTransactions(address) {\r\n        let transactions = await this.getTransactions(address);\r\n\r\n        let length = Object.keys(transactions.result).length;\r\n        let resultArray = transactions.result;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n\r\n            let senderAddress = resultArray[i].from;\r\n            let senderName = await this.lookUpName(senderAddress);\r\n\r\n            let receiverAddress = resultArray[i].to;\r\n            let receiverName = await this.lookUpName(receiverAddress);\r\n\r\n            let timeStamp = this.convertTime(parseInt(resultArray[i].timeStamp));\r\n            let input = resultArray[i].input;\r\n\r\n\r\n            //console.log(\"sender: \" + senderName + \", receiver: \" + receiverName);\r\n\r\n            this.addressManager.transactionMap.set(i, new Transaction(senderAddress, senderName, receiverAddress, receiverName, timeStamp, input));\r\n\r\n            let percent = Math.round((i + 1) * 100 / length * 100) / 100;\r\n            document.getElementById(\"p\").innerHTML = percent + \"%\";\r\n            document.getElementById(\"p\").style.width=percent+\"%\";\r\n            document.getElementById(\"loader_info\").innerHTML = \"Receiving transaction (\" + (i + 1) + \"/\" + length + \")\";\r\n            \r\n        }\r\n\r\n        //console.log(this.addressManager.getTransactionSummaryMap());\r\n        //console.log(this.addressManager.getTransactionsForAddress([\"0xaa84378fa41da83a9b6523ba46e45a664fbebfc8\",\"0xe659bc6a60ba2091c08f7df623ba6057349b6980\"]));\r\n\r\n\r\n\r\n    }\r\n\r\n    async isContract(address) {\r\n\r\n        let isContract = true;\r\n\r\n        if (address === \"\") { // special case\r\n            isContract = false;\r\n        } else {\r\n            const Web3 = require('web3');\r\n            const web3 = new Web3(new Web3.providers.HttpProvider(this.web3Url));\r\n            let result = await web3.eth.getCode(address);\r\n\r\n            if (result === \"0x\") {\r\n                isContract = false;\r\n            }\r\n        }\r\n        return isContract;\r\n    }\r\n\r\n    async isVerifiedContract(address) {\r\n        let isVerifiedContract = true;\r\n\r\n        let result = await fetch(this.URLContractSourceCode + address).then(response => response.json());\r\n\r\n        if (typeof result.result[0].ContractName === \"undefined\") {\r\n            isVerifiedContract = false;\r\n        }\r\n\r\n        return isVerifiedContract;\r\n    }\r\n\r\n    async getContractName(address) {\r\n        let result = await fetch(this.URLContractSourceCode + address).then(response => response.json());\r\n\r\n        let contractName = result.result[0].ContractName;\r\n\r\n        return (typeof contractName !== \"undefined\") ? contractName : null;\r\n    }\r\n\r\n    async getAccountName(address) {\r\n\r\n        let response = await fetch(\"https://blockexplorer.bloxberg.org/address/\" + address + \"/transactions\");\r\n        let httpText = await response.text();\r\n\r\n        let regex = '<strong class=\"mr-4 mb-2 text-dark\" title=\"[a-zA-Z0-9. ]*\">';\r\n\r\n        let result = httpText.match(regex);\r\n\r\n        let accountName = null;\r\n\r\n        if (result !== null) {\r\n            accountName = result[0].substring(43, result[0].length - 2);\r\n        }\r\n\r\n        return accountName;\r\n    }\r\n\r\n    convertTime(timeStamp) {\r\n        let date = new Date(timeStamp * 1000);\r\n\r\n        let day = (date.getDate() < 10) ? \"0\" + date.getDate() : date.getDate();\r\n        let month = (date.getMonth() + 1 < 10) ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1;\r\n        let year = date.getFullYear();\r\n\r\n        let hours = (date.getHours() < 10) ? \"0\" + date.getHours() : date.getHours();\r\n        let minutes = (date.getMinutes() < 10) ? \"0\" + date.getMinutes() : date.getMinutes();\r\n        let seconds = (date.getSeconds() < 10) ? \"0\" + date.getSeconds() : date.getSeconds();\r\n\r\n        let timeString = day + \".\" + month + \".\" + year + \", \" + hours + \":\" + minutes + \":\" + seconds;\r\n\r\n        return timeString;\r\n    }\r\n\r\n    test() {\r\n\r\n        /*\r\n        ISCC Base58 encoding: 0x00f71201ad85f5a189102b2a76b05434d95a204f077f99ee368d213022628ba1e4fa5686\r\n        → Resolves to: \r\n        Meta-ID: CCLYJLQWKidp1\r\n        Content-ID: CT8ZSFJGhmUcM\r\n        Data-ID: CDEZgdCTV5Tum\r\n        Instance-ID: CR6kNU6eVKkLM\r\n        Tophash: 22628ba1e4fa56864075e614b5930086 944d530ec775adfcc5191ed8e4b38cc6\r\n        */\r\n\r\n        let data = \"0x989cda35000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002400f71201ad85f5a189102b2a76b05434d95a204f077f99ee368d213022628ba1e4fa568600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002022628ba1e4fa56864075e614b5930086944d530ec775adfcc5191ed8e4b38cc6\";\r\n\r\n        const InputDataDecoder = require('ethereum-input-data-decoder');\r\n\r\n        const abi = [{ \"type\": \"event\", \"name\": \"ISCC\", \"inputs\": [{ \"type\": \"address\", \"name\": \"actor\", \"internalType\": \"address\", \"indexed\": true }, { \"type\": \"bytes\", \"name\": \"iscc\", \"internalType\": \"bytes\", \"indexed\": false }, { \"type\": \"bytes\", \"name\": \"tophash\", \"internalType\": \"bytes\", \"indexed\": false }], \"anonymous\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"outputs\": [], \"name\": \"declare\", \"inputs\": [{ \"type\": \"bytes\", \"name\": \"iscc\", \"internalType\": \"bytes\" }, { \"type\": \"bytes\", \"name\": \"tophash\", \"internalType\": \"bytes\" }] }];\r\n        const decoder = new InputDataDecoder(abi);\r\n        const result = decoder.decodeData(data);\r\n\r\n        console.log(result);\r\n\r\n        let bytes = \"0 247 18 1 173 133 245 161 137 - 16 43 42 118 176 84 52 217 90 - 32 79 7 127 153 238 54 141 33 - 48 34 98 139 161 228 250 86 134\";\r\n        let encodedString = \"00f71201ad85f5a189 - 102b2a76b05434d95a204f077f99ee368d213022628ba1e4fa5686\";\r\n\r\n        let array = [0,\r\n            247,\r\n            18,\r\n            1,\r\n            173,\r\n            133,\r\n            245,\r\n            161,\r\n            137,\r\n            16,\r\n            43,\r\n            42,\r\n            118,\r\n            176,\r\n            84,\r\n            52,\r\n            217,\r\n            90,\r\n            32,\r\n            79,\r\n            7,\r\n            127,\r\n            153,\r\n            238,\r\n            54,\r\n            141,\r\n            33,\r\n            48,\r\n            34,\r\n            98,\r\n            139,\r\n            161,\r\n            228,\r\n            250,\r\n            86,\r\n            134];\r\n\r\n        let base62 = require(\"base62/lib/custom\");\r\n\r\n        let charset1 = \"C23456789rB1ZEFGTtYiAaVvMmHUPWXKDNbcdefghLjkSnopRqsJuQwxyz\";\r\n        let charset2 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\r\n        charset1 = base62.indexCharset(charset1);\r\n        console.log(base62.encode(247, charset1));\r\n\r\n\r\n        let str = \"\";\r\n\r\n        for (let i = 0; i < array.length; i++) {\r\n            console.log(i)\r\n            if (i !== 0 && i % 8 == 0) {\r\n                str = str + \"-\";\r\n            }\r\n            str = str + base62.encode(array[i], charset1);\r\n        }\r\n\r\n        console.log(\"String\");\r\n        console.log(str);\r\n\r\n        console.log(this.byteToHex(array));\r\n    }\r\n\r\n    byteToHex(byteArray) {\r\n        return Array.from(byteArray, function (byte) {\r\n            return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n        }).join('');\r\n    }\r\n\r\n}\r\n\r\nexport default DataFetcher;","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport '../../../bootstrap.min.css';\r\nimport DataFetcher from './DataFetcher';\r\n\r\nclass TableCreator extends Component {\r\n\r\n  htmlCode = '';\r\n  responseObject = null;\r\n  promise = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"Consturctor:\")\r\n    console.log(props);\r\n\r\n    this.responseObject = new DataFetcher();\r\n  }\r\n\r\n  renderData(promise) {\r\n\r\n    this.promise = promise;\r\n\r\n    document.getElementById(\"type\").innerHTML = promise.type;\r\n    document.getElementById(\"name\").innerHTML = promise.name;\r\n    document.getElementById(\"status\").innerHTML = promise.status;\r\n\r\n    this.renderTableSummary();\r\n    \r\n\r\n  }\r\n\r\n  renderTableSummary() {\r\n\r\n    console.log(\"Transaction Summary:\")\r\n\r\n    this.htmlCode = \"\";\r\n\r\n    let promise = this.promise;\r\n\r\n    let transactionSummary = promise.getTransactionSummaryMap();\r\n    console.log(transactionSummary);\r\n\r\n    this.addToHTMLCode(\r\n      '<table class=\"table\" style=\"table-layout:fixed; word-wrap:break-word;\">'\r\n      + '<thead class=\"thead-dark\">'\r\n      + '<tr>'\r\n    );\r\n\r\n    this.addToHTMLCode('<th scope=\"col\">#</th>');\r\n    this.addToHTMLCode('<th scope=\"col\">Sender</th>');\r\n    this.addToHTMLCode('<th scope=\"col\">Receiver</th>');\r\n    this.addToHTMLCode('<th scope=\"col\">TxCount</th>');\r\n\r\n    this.addToHTMLCode(\r\n      '</tr>'\r\n      + '</thead>'\r\n      + '<tbody>');\r\n\r\n    \r\n    let rowCounter = 1;\r\n    for (let [key, value] of transactionSummary) {\r\n      console.log(rowCounter + \", \" + value.senderName + \", \" + value.receiverName + \", \" + value.txCount);\r\n      //console.log(key, value);\r\n      this.addToHTMLCode(\r\n        '<tr>'\r\n        + '<th scope=\"row\">' + rowCounter + '</th>'\r\n        + '<td>' + value.senderName + '</td>'\r\n        + '<td>' + value.receiverName + '</td>'\r\n        + '<td>' + value.txCount + '</td>'\r\n        + '</tr>'\r\n      );\r\n      rowCounter++;\r\n    }\r\n\r\n    this.addToHTMLCode(\r\n      '</tbody>'\r\n      + '</table>'\r\n    );\r\n\r\n    document.getElementById(\"table\").innerHTML = this.htmlCode;\r\n  }\r\n\r\n  renderTableAllTransactions() {\r\n\r\n    console.log(\"TransactionMap\");\r\n\r\n    this.htmlCode = \"\";\r\n    //console.log(promise.name);\r\n\r\n    let promise = this.promise;\r\n\r\n    let transactions = promise.transactionMap;    \r\n\r\n    this.addToHTMLCode(\r\n      '<table class=\"table\" style=\"table-layout:fixed; word-wrap:break-word;\">'\r\n      + '<thead class=\"thead-dark\">'\r\n      + '<tr>'\r\n    );\r\n\r\n    this.addToHTMLCode('<th scope=\"col\">#</th>');\r\n    this.addToHTMLCode('<th scope=\"col\">Sender</th>');\r\n    this.addToHTMLCode('<th scope=\"col\">Receiver</th>');\r\n    this.addToHTMLCode('<th scope=\"col\">TimeStamp</th>');\r\n    this.addToHTMLCode('<th scope=\"col\">Input</th>');\r\n\r\n    this.addToHTMLCode(\r\n      '</tr>'\r\n      + '</thead>'\r\n      + '<tbody>');\r\n\r\n    let rowCounter = 1;\r\n    for (let [k, v] of transactions) {\r\n      //console.log(k, v);\r\n      this.addToHTMLCode(\r\n        '<tr>'\r\n        + '<th scope=\"row\">' + rowCounter + '</th>'\r\n        + '<td>' + v.senderName + '</td>'\r\n        + '<td>' + v.receiverName + '</td>'\r\n        + '<td>' + v.timeStamp + '</td>'\r\n        + '<td>' + v.input + '</td>'\r\n        + '</tr>'\r\n      );\r\n      rowCounter++;\r\n    }\r\n\r\n    this.addToHTMLCode(\r\n      '</tbody>'\r\n      + '</table>'\r\n    );\r\n\r\n    //document.getElementById(\"table_window\").style.visibility = 'visible';\r\n    document.getElementById(\"table\").innerHTML = this.htmlCode;\r\n  }\r\n\r\n  renderTableSelectedTransactions(promise, selection) {\r\n\r\n  }\r\n\r\n  addToHTMLCode(code) {\r\n    this.htmlCode = this.htmlCode + code;\r\n  }\r\n\r\n  getTableHeadlines(transactions) {\r\n    let headlines = [];\r\n\r\n    Object.keys(transactions[0]).forEach(function (key) {\r\n      headlines.push(key);\r\n    });\r\n\r\n    return headlines;\r\n  }\r\n\r\n  scrollAnimation() {\r\n    document.getElementById(\"table_window\").scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n      inline: \"nearest\"\r\n    });\r\n  }\r\n\r\n  showInformation(show) {\r\n    if(show === true) {\r\n      let infoElements = document.getElementsByClassName(\"info\");\r\n      for(let i = 0; i < infoElements.length; i++) {\r\n        infoElements[i].style.display=\"table-row\";\r\n      }\r\n    } else {\r\n      let infoElements = document.getElementsByClassName(\"info\");\r\n      for(let i = 0; i < infoElements.length; i++) {\r\n        infoElements[i].style.display=\"none\";\r\n      }\r\n    }\r\n  }\r\n  showLoader(show) {\r\n    if(show === true) {\r\n      document.getElementById(\"loader_window\").style.display=\"block\";\r\n    } else {\r\n      document.getElementById(\"loader_window\").style.display=\"none\";\r\n      document.getElementById(\"p\").style.width=\"0%\";\r\n      document.getElementById(\"p\").innerHTML=\"0.0%\";\r\n      document.getElementById(\"loader_info\").innerHTML = \"\";\r\n    }\r\n  }\r\n  showTable(show) {\r\n    if(show === true) {\r\n      document.getElementById(\"table_window\").style.display=\"block\";\r\n    } else {\r\n      document.getElementById(\"table_window\").style.display=\"none\";\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.showInformation(false);\r\n    this.showLoader(true);\r\n    this.showTable(false);\r\n    let promise = this.responseObject.fetchData(this.props.address);\r\n    promise.then((promise) => {\r\n      this.showLoader(false);\r\n      this.showInformation(true);\r\n      this.showTable(true);\r\n      this.renderData(promise);\r\n      this.scrollAnimation();\r\n    });\r\n  }\r\n\r\n  componentWillUpdate(nextProps) {\r\n    this.showInformation(false);\r\n    this.showLoader(true);\r\n    this.showTable(false);\r\n    let promise = this.responseObject.fetchData(nextProps.address);\r\n    promise.then((promise) => {\r\n      this.showLoader(false);\r\n      this.showInformation(true);\r\n      this.showTable(true);\r\n      this.renderData(promise);\r\n      this.scrollAnimation();\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"TableCreator\">\r\n        <div id=\"links\">\r\n          <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" id=\"btn\" onClick={() => this.renderTableSummary()}>Summary</button>\r\n          <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" id=\"btn\" onClick={() => this.renderTableAllTransactions()}>All transactions</button>\r\n          <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" id=\"btn\" onClick=\"#\">Selected transactions</button>\r\n        </div>\r\n        <table>\r\n          <tr>\r\n            <td>\r\n              <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" id=\"btn\" onClick=\"#\">First</button>\r\n            </td>\r\n            <td>\r\n              <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" id=\"btn\" onClick=\"#\">&lt;</button>\r\n            </td>\r\n            <td>\r\n              <p class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" id=\"btn\" onClick=\"#\">Page</p>\r\n            </td>\r\n            <td>\r\n              <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" id=\"btn\" onClick=\"#\">&gt;</button>\r\n            </td>\r\n            <td>\r\n              <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" id=\"btn\" onClick=\"#\">Last</button>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n        <div id=\"table\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableCreator;","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport '../../../bootstrap.min.css';\r\nimport TableCreator from './TableCreator';\r\n\r\nclass AddressViewer extends Component {\r\n\r\n  state = {\r\n    address: null\r\n  };\r\n\r\n  render() {\r\n\r\n    let table = (this.state.address !== null) ? <TableCreator address={this.state.address} /> : null;\r\n\r\n    return (\r\n      <div className=\"AddressViewer\">\r\n\r\n        <div class=\"window\" id=\"search_window\">\r\n          <table id=\"search_table\">\r\n            <tr>\r\n              <td>\r\n                <label class=\"black_label\">Address</label>\r\n              </td>\r\n              <td>                \r\n                <div class=\"input-group-append\">\r\n                  <input type=\"text\" id=\"address_input\" class=\"form-control form-control-lg\" type=\"text\" placeholder=\"Enter address...\" autofocus/>\r\n                  <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onClick={() => {\r\n\r\n                    let address = document.getElementById(\"address_input\").value;\r\n\r\n                    let regex = \"^0x[a-fA-F0-9]{40}$\";\r\n                    if(address != \"\") {\r\n                      if(address.match(regex)) {\r\n                        console.log(\"address -> \" + address);\r\n                        this.setState({ address: address });\r\n                      } else {\r\n                        window.alert(\"Invalid address.\");\r\n                      }\r\n                    } else {\r\n                      window.alert(\"Inputfield is empty.\");\r\n                    }\r\n\r\n                  }}>Search</button>\r\n              </div>\r\n              </td>\r\n            </tr>\r\n            <tr class=\"info\">\r\n              <td>\r\n                <label class=\"black_label\">Type</label>\r\n              </td>\r\n              <td>\r\n                <label id=\"type\"></label>\r\n              </td>\r\n            </tr>\r\n            <tr class=\"info\">\r\n              <td>\r\n                <label class=\"black_label\">Name</label>\r\n              </td>\r\n              <td>\r\n                <label id=\"name\"></label>\r\n              </td>\r\n            </tr>\r\n            <tr class=\"info\">\r\n              <td>\r\n                <label class=\"black_label\">Status</label>\r\n              </td>\r\n              <td>\r\n                <label id=\"status\"></label>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n\r\n        <div class=\"window\" id=\"loader_window\">\r\n          <div id=\"pb\">\r\n            <div id=\"p\">\r\n              0.0%\r\n            </div>\r\n          </div>\r\n          <label id=\"loader_info\"></label>\r\n        </div>\r\n\r\n        <div class=\"window\" id=\"table_window\">\r\n          {table}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default AddressViewer;","import React from 'react';\r\n\r\nclass DataCollector extends React.Component {\r\n\r\n    transactionMap = null;\r\n    tempMap = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.transactionMap = new Map();\r\n        this.tempMap = new Map();\r\n    }\r\n\r\n    async getData(page, offset, depth) {\r\n\r\n        this.setLoadingbar(0);\r\n\r\n        this.transactionMap = new Map();\r\n        this.tempMap = new Map();\r\n\r\n        // get contract list\r\n        console.log(\"Function - getContractList(page, offsett):\");\r\n        let contractList = await this.getContractList(page, offset);\r\n        console.log(\"CONTRACTLIST:\");\r\n        console.log(contractList);\r\n\r\n        // get transactions from contract list\r\n        console.log(\"Function - getTransactionFromContractList(contractList):\");\r\n        await this.getTransactionFromContractList(contractList);\r\n        console.log(\"TRANSACTIONMAP BEFORE DEEEP SEARCH:\");\r\n        console.log(this.transactionMap);\r\n\r\n        // search deeper into network\r\n        console.log(\"Function - deepSearch(depth, round):\");\r\n        this.tempMap = await this.copyMap(this.transactionMap);\r\n        if (depth != 0) {\r\n            for (let round = 1; round <= depth; round++) {\r\n                await this.deepSearch(depth, round);\r\n            }\r\n            console.log(\"TRANSACTIONMAP AFTER DEEEP SEARCH:\");\r\n            console.log(this.transactionMap);\r\n        }\r\n\r\n        document.getElementById(\"loading_informaiton\").innerHTML = \"Loading...\";\r\n\r\n        return this.convertMapToArray(this.transactionMap);\r\n    }\r\n\r\n    async getContractList(page, offset) {\r\n\r\n        const url = 'https://blockexplorer.bloxberg.org/api/api?module=contract&action=listcontracts&page=' + page + '&offset=' + offset;\r\n\r\n        let contractList = await fetch(url).then(response => response.json());\r\n\r\n        return contractList.result;\r\n    }\r\n\r\n    async getTransactionFromContractList(contractList) {\r\n\r\n        console.log(\"Searching for contract transactions:\");\r\n        \r\n        let counter = 1;\r\n        for (const contract of contractList) {\r\n            let url = 'https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=';\r\n            url = url + contract.Address;\r\n\r\n            let arrays = await fetch(url).then(json => json.json());\r\n\r\n            let length = Object.keys(arrays.result).length;\r\n            let array = arrays.result;\r\n\r\n            console.log(\"   Recived \" + length + \" Transaction entries.\");\r\n\r\n            for (let i = 0; i < length; i++) {\r\n\r\n                if (array[i].from !== \"\" && array[i].to !== \"\" && !this.mapContains(this.transactionMap, array[i].from, array[i].to)) {\r\n                    this.transactionMap.set(\r\n                        array[i].from + array[i].to,\r\n                        {\r\n                            source: array[i].from,\r\n                            target: array[i].to,\r\n                            sourceType: ((await this.isContract(array[i].from)) ? \"Contract\" : \"Account\"),\r\n                            targetType: \"Contract\"\r\n                        }\r\n                    )\r\n                    console.log(\"      Transaction entry number \" + (i + 1) + \" added.\");\r\n                }\r\n            }\r\n\r\n            let p = Math.round(counter * 100 / contractList.length * 100) / 100;\r\n            this.setLoadingbar(p);\r\n\r\n            counter++;\r\n        }\r\n        \r\n        this.setLoadingbar(0);\r\n    }\r\n\r\n    async deepSearch(depth, round) {\r\n\r\n        let map = this.copyMap(this.tempMap);\r\n        this.tempMap = new Map();\r\n\r\n        let counter = 1;\r\n\r\n        console.log(\"DEEP SEARCH ROUND \" + round + \"/\" + depth);\r\n\r\n        for (const entry of map) {\r\n\r\n            console.log(\"   Look up for map entry \" + counter + \" of \" + map.size);\r\n\r\n            document.getElementById(\"loading_informaiton\").innerHTML = \"Address look up (\" + counter + \"/\" + map.size + \")<br>Depth search level (\" + round + \"/\" + depth + \")\";\r\n\r\n            let url = 'https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=';\r\n            url = url + entry[1].source;\r\n\r\n            console.log(\"      Searching transactions for address \" + entry[1].source + \" ...\");\r\n\r\n            let arrays = await fetch(url).then(json => json.json());\r\n\r\n            let length = Object.keys(arrays.result).length;\r\n            let array = arrays.result;\r\n\r\n            console.log(\"         Recived \" + length + \" Transaction entries.\");\r\n\r\n            let addCounter = 1;\r\n            for (let i = 0; i < length; i++) {\r\n\r\n                if (array[i].to !== entry[1].source) {\r\n                    let temp = array[i].from;\r\n                    array[i].from = array[i].to;\r\n                    array[i].to = temp;\r\n                }\r\n\r\n                if (array[i].from !== \"\" && array[i].to !== \"\" && !this.mapContains(this.transactionMap, array[i].from, array[i].to)) {\r\n\r\n                    this.transactionMap.set(\r\n                        array[i].from + array[i].to,\r\n                        {\r\n                            source: array[i].from,\r\n                            target: array[i].to,\r\n                            sourceType: (await this.isContract(array[i].from) ? \"Contract\" : \"Account\"),\r\n                            targetType: (await this.isContract(array[i].to) ? \"Contract\" : \"Account\")\r\n                        }\r\n                    );\r\n                    this.tempMap.set(\r\n                        array[i].from + array[i].to,\r\n                        {\r\n                            source: array[i].from,\r\n                            target: array[i].to,\r\n                            sourceType: (await this.isContract(array[i].from) ? \"Contract\" : \"Account\"),\r\n                            targetType: (await this.isContract(array[i].to) ? \"Contract\" : \"Account\")\r\n                        }\r\n                    );\r\n                    console.log(\"            Transaction entry number \" + addCounter + \" added.\");\r\n\r\n                    let p = Math.round(addCounter * 100 / length * 100) / 100;\r\n                    this.setLoadingbar(p);\r\n                }\r\n                addCounter++;\r\n            }\r\n            addCounter = 1;\r\n            counter++;\r\n\r\n            this.setLoadingbar(0);\r\n        }\r\n\r\n        console.log(\"----- MAP for round \" + round + \" -----\");\r\n        console.log(map);\r\n        console.log(\"---------------------------\");\r\n    }\r\n\r\n    async isContract(address) {\r\n\r\n        let isContract = true;\r\n\r\n        const Web3 = require('web3');\r\n        const web3 = new Web3(new Web3.providers.HttpProvider('https://core.bloxberg.org/'));\r\n        let result = await web3.eth.getCode(address);\r\n\r\n        if(result === \"0x\") {\r\n            isContract = false;\r\n        }\r\n\r\n        return isContract;\r\n    }\r\n\r\n    convertMapToArray(map) {\r\n        let array = new Array();\r\n\r\n        map.forEach((value, key) => {\r\n            array.push({ source: value.source, target: value.target, sourceType: value.sourceType, targetType: value.targetType });\r\n        });\r\n\r\n        return array;\r\n    }\r\n\r\n    copyMap(sourceMap) {\r\n        let map = new Map();\r\n\r\n        for (const entry of sourceMap) {\r\n            map.set(entry[1].source + entry[1].target, { source: entry[1].source, target: entry[1].target, sourceType: entry[1].sourceType, targetType: entry[1].targetType });\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    mapContains(map, x, y) {\r\n        return map.has(x + y) || map.has(y + x);\r\n    }\r\n\r\n    setLoadingbar(prozent) {\r\n        document.getElementById(\"progress\").style.width = prozent + \"%\";\r\n        document.getElementById(\"progress\").innerHTML = prozent + \"%\";\r\n    }\r\n\r\n}\r\n\r\nexport default DataCollector;","import React, {Component} from 'react';\r\nimport * as d3 from 'd3';\r\nimport './styles.css';\r\nimport DataCollector from './DataCollector';\r\n\r\nclass GraphCreator extends Component {\r\n\r\n    responseObject = null;\r\n    zoomEnable = true;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Consturctor:\")\r\n        console.log(props);\r\n        this.responseObject = new DataCollector();\r\n    }\r\n\r\n    createGraph(promise) {\r\n        console.log(\"Function - createGraph():\");\r\n\r\n        let graphBoxHeight = window.innerHeight - document.getElementById(\"address_information\").offsetHeight;\r\n        document.getElementById(\"graph_box\").style.height = graphBoxHeight + \"px\";\r\n\r\n        let height = graphBoxHeight;\r\n        let width = window.innerWidth;\r\n\r\n        console.log(\"PROMISE:\");\r\n        console.log(promise);\r\n\r\n        let links = promise;\r\n\r\n        console.log(\"LINKS:\");\r\n        console.log(links);\r\n\r\n        // create empty nodes array\r\n        let nodes = {};\r\n\r\n        // compute nodes from links data\r\n        links.forEach(function (link) {\r\n            link.source = nodes[link.source] ||\r\n                (nodes[link.source] = { nodeAddress: link.source, source: link.source, target: link.target, typeSource: link.sourceType, typeTarget: link.targetType });\r\n            link.target = nodes[link.target] ||\r\n                (nodes[link.target] = { nodeAddress: link.target, source: link.source, target: link.target, typeSource: link.sourceType, typeTarget: link.targetType });\r\n        });\r\n\r\n        console.log(\"NODES:\");\r\n        console.log(nodes);\r\n\r\n        let svgWidth = document.getElementById(\"address_information\").offsetWidth - 2;\r\n        let svgHeight = height - 20;\r\n\r\n        let zoom = d3.behavior.zoom().on(\"zoom\", updateZoom);\r\n\r\n        document.getElementById(\"container\").innerHTML = \"\";\r\n        // add a SVG to the body for our viz\r\n        let svg = d3.select('#container').append('svg')\r\n            .attr('width', svgWidth)\r\n            .attr('height', svgHeight)\r\n            .style(\"cursor\", \"move\")\r\n            .call(zoom)\r\n            .append(\"g\");\r\n\r\n\r\n        // use the force\r\n        let force = d3.layout.force() //build the layout\r\n            .size([svgWidth, svgHeight]) //specified earlier\r\n            .nodes(d3.values(nodes)) //add nodes\r\n            .links(links) //add links\r\n            .on(\"tick\", tick) //what to do\r\n            .linkDistance(300) //set for proper svg size\r\n            .charge(function (d) {\r\n                var charge = -200;\r\n                if (d.index === 0) charge = 2.5 * charge;\r\n                return charge;\r\n            })\r\n            .start(); //kick the party off!\r\n\r\n        // add the links\r\n        let link = svg.selectAll('.link')\r\n            .data(links)\r\n            .enter().append('line')\r\n            .attr('class', 'link');\r\n\r\n        // add the nodes\r\n        let node = svg.selectAll('.node')\r\n            .data(force.nodes()) //add\r\n            .enter().append('circle')\r\n            .style(\"cursor\", \"auto\")\r\n            .style(\"fill\", function (d) {\r\n                if (d.nodeAddress === d.source) {\r\n                    if (d.typeSource === \"Contract\") {\r\n                        return \"orange\";\r\n                    }\r\n                }\r\n                if (d.nodeAddress === d.target) {\r\n                    if (d.typeTarget === \"Contract\") {\r\n                        return \"orange\";\r\n                    }\r\n                }\r\n            })\r\n            .attr('class', 'node')\r\n            .attr('r', width * 0.005) //radius of circle\r\n            .on(\"click\", function (d) {\r\n                console.log(d);\r\n                if (d.nodeAddress === d.source) {\r\n                    document.getElementById(\"address_information\").innerHTML =\r\n                            \" <p class='labels'>Type:</p><p class='values'>\" + d.typeSource + \"</p>\"\r\n                            + \"<p class='labels'>Address:</p><p class='values'><a href='https://blockexplorer.bloxberg.org/address/\" + d.source + \"' target='_blank'>\" + d.source + \"</a></p>\";\r\n                }\r\n                if(d.nodeAddress === d.target) {\r\n                    document.getElementById(\"address_information\").innerHTML =\r\n                            \" <p class='labels'>Type:</p><p class='values'>\" + d.typeTarget + \"</p>\"\r\n                            + \"<p class='labels'>Address:</p><p class='values'><a href='https://blockexplorer.bloxberg.org/address/\" + d.target + \"' target='_blank'>\" + d.target + \"</a></p>\";\r\n                }\r\n            })\r\n            .on(\"mousedown\", function (d) {\r\n\r\n                console.log(\"----- Node Information -----\");\r\n                console.log(\"nodeAddress: \" + d.nodeAddress);\r\n                console.log(\"source: \" + d.source);\r\n                console.log(\"target: \" + d.target);\r\n                console.log(\"typeSource:   \" + d.typeSource);\r\n                console.log(\"typeTarget:   \" + d.typeTarget);\r\n\r\n                this.zoomEnable = false;\r\n                // console.log(\"ZoomEnabled? \" + this.zoomEnable);\r\n                d3.select('#container').select('svg').call(d3.behavior.zoom().on(\"zoom\", null));\r\n            })\r\n            .on(\"mouseup\", function () {\r\n                this.zoomEnable = true;\r\n                // console.log(\"ZoomEnabled? \" + this.zoomEnable);\r\n                d3.select('#container').select('svg').call(zoom);\r\n            })\r\n            .on(\"focus\", function () {\r\n                d3.select(this).style(\"border-color\", \"red\"); // fehlerhaft\r\n            });\r\n\r\n        function tick(e) {\r\n\r\n            node.attr('cx', function (d) { return d.x; })\r\n                .attr('cy', function (d) { return d.y; })\r\n                .call(force.drag);\r\n\r\n            link.attr('x1', function (d) { return d.source.x; })\r\n                .attr('y1', function (d) { return d.source.y; })\r\n                .attr('x2', function (d) { return d.target.x; })\r\n                .attr('y2', function (d) { return d.target.y; });\r\n        }\r\n\r\n        function updateZoom() {\r\n            svg.attr(\"transform\",\r\n                \"translate(\" + d3.event.translate + \")\"\r\n                + \" scale(\" + d3.event.scale + \")\");\r\n        }\r\n\r\n        console.log(\"Graph drawed.\");\r\n    }\r\n\r\n    timeStap() {\r\n        return Math.floor(Date.now());\r\n    }\r\n    calculationTime(startTime, endTime) {\r\n        console.log(\"Graph created in \" + (endTime - startTime) / 1000 + \" seconds.\");\r\n    }\r\n\r\n    showLoader() {\r\n        document.getElementById(\"address_information\").innerHTML = \"Select a node for node information.\";\r\n        document.getElementById(\"address_information\").style.visibility = \"hidden\";\r\n        document.getElementById(\"container\").style.visibility = \"hidden\";\r\n        document.getElementById(\"loader\").style.visibility = \"visible\";\r\n    }\r\n\r\n    hideLoader() {\r\n        document.getElementById(\"address_information\").style.visibility = \"visible\";\r\n        document.getElementById(\"container\").style.visibility = \"visible\";\r\n        document.getElementById(\"loader\").style.visibility = \"hidden\";\r\n        document.getElementById(\"progress\").style.width = \"0%\";\r\n        document.getElementById(\"progress\").innerHTML = \"0%\";\r\n    }\r\n\r\n    scrollAnimation() {\r\n        document.getElementById(\"address_information\").scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"start\",\r\n            inline: \"nearest\"\r\n        });\r\n    }\r\n\r\n    widthResizeListener() {\r\n        window.onresize = function () {\r\n            document.getElementsByTagName(\"svg\")[0].style.width = document.getElementById(\"address_information\").offsetWidth - 2;\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        console.log(\"Component will mount.\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Component did mount.\");\r\n\r\n        let startTime = this.timeStap();\r\n\r\n        this.showLoader();\r\n        this.responseObject.getData(this.props.page, this.props.offset, this.props.depth).then((promise) => {\r\n            this.hideLoader();\r\n            this.createGraph(promise);\r\n\r\n            let endTime = this.timeStap();\r\n            this.calculationTime(startTime, endTime);\r\n\r\n            this.scrollAnimation();\r\n            this.widthResizeListener();\r\n        });\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        console.log(\"Component will update.\");\r\n\r\n        let startTime = this.timeStap();\r\n\r\n        this.showLoader();\r\n        this.responseObject.getData(nextProps.page, nextProps.offset, nextProps.depth).then((promise) => {\r\n            this.hideLoader();\r\n            this.createGraph(promise);\r\n\r\n            let endTime = this.timeStap();\r\n            this.calculationTime(startTime, endTime);\r\n\r\n            this.scrollAnimation();\r\n            this.widthResizeListener();\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"Component did update.\");\r\n    }\r\n\r\n    render() {\r\n        return (<div id=\"container\"></div>);\r\n    }\r\n}\r\n\r\nexport default GraphCreator;","import React, {Component} from 'react';\r\nimport './styles.css';\r\nimport GraphCreator from './GraphCreator';\r\n\r\nclass VBN extends Component {\r\n\r\n    state = {\r\n      page: 0,\r\n      offset: 0,\r\n      depth: 0\r\n    };\r\n  \r\n    render() {\r\n  \r\n      let graph = (this.state.page !== 0) ? <GraphCreator page={this.state.page} offset={this.state.offset} depth={this.state.depth} /> : null;\r\n  \r\n      const maxPage = 100;\r\n      const maxOffset = 1800;\r\n      const maxDepth = 5;\r\n  \r\n      const pageSelectedValue = 2;\r\n      const offsetSelectedValue = 1;\r\n      const depthSelectedValue = 0;\r\n  \r\n      const pageSelectOptions = [];\r\n      for(let i = 1; i <= maxPage; i++) {\r\n        pageSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n      }\r\n      const offsetSelectOptions = [];\r\n      for(let i = 1; i <= maxOffset; i++) {\r\n        offsetSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n      }\r\n      const depthSelectOptions = [];\r\n      for(let i = 0; i <= maxDepth; i++) {\r\n        depthSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n      }\r\n  \r\n      return (\r\n        <div className=\"VBN\">\r\n          <div id=\"banner\">\r\n            <h1 className=\"title\">Visualisation of Bloxberg-Network</h1>\r\n          </div>\r\n          <div id=\"site_informaiton\">\r\n            <p>This website will produce a force directed d3 graph, that will visualizise the Bloxberg Network<br/>\r\n            by using the <a href=\"https://blockexplorer.bloxberg.org/api_docs\" target=\"_blank\">Bloxberg RPC API</a> and the <a href=\"https://web3js.readthedocs.io/en/v1.3.0/\" target=\"_blank\">Web3</a> framework for JavaScript.</p>\r\n          </div>\r\n          <div id=\"values_informaiton\">\r\n            <p id=\"text\">\r\n              <b>Page</b> represents the page number to be used for pagination.\r\n            </p>\r\n            <p id=\"text\">\r\n              <b>Offset</b> represents the maximum number of records to return when paginating.\r\n            </p>\r\n            <p id=\"text\">\r\n              <b>Depth</b> represents how deep the http requests will search into to network.\r\n            </p>\r\n          </div>\r\n          <div id=\"control\">\r\n            <label>Page:</label>\r\n            <select id=\"page_selection\" defaultValue={pageSelectedValue}>\r\n              {pageSelectOptions}\r\n            </select>\r\n            <label>Offset:</label>\r\n            <select id=\"offset_selection\" defaultValue={offsetSelectedValue}>\r\n              {offsetSelectOptions}\r\n            </select>\r\n            <label>Depth:</label>\r\n            <select id=\"depth_selection\" defaultValue={depthSelectedValue}>\r\n              {depthSelectOptions}\r\n            </select>\r\n            <input type=\"submit\" id=\"button\" value=\"Create Graph\" onClick={() => {\r\n  \r\n              let page = document.getElementById(\"page_selection\").value;\r\n              let offset = document.getElementById(\"offset_selection\").value;\r\n              let depth = document.getElementById(\"depth_selection\").value;\r\n  \r\n              console.log(\"page -> \" + page);\r\n              console.log(\"offset -> \" + offset);\r\n              console.log(\"depth -> \" + depth);\r\n  \r\n              this.setState({ page: page, offset: offset, depth: depth});\r\n              \r\n            }} />\r\n          </div>\r\n          <div id=\"loader\" style={{visibility: \"visable\"}}>\r\n            <div id=\"progressbar\">\r\n              <div id=\"progress\"></div>\r\n              <p id=\"loading_informaiton\">Loading...</p>\r\n            </div>\r\n          </div>\r\n          <div id=\"address_information\">\r\n            <p class=\"labels\">Select a node for node information.</p>\r\n          </div>\r\n          <div id=\"graph_box\">\r\n            {graph}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  export default VBN;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport './App.css';\r\nimport AddressViewer from './modules/address_viewer/code/AddressViewer';\r\nimport VBN from './modules/vbn/code/VBN';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n\r\n        <div className=\"App\" id=\"body\">\r\n\r\n        <div id=\"navigation\">\r\n              <ul id=\"nav-links\">\r\n                <Link to=\"/AddressViewer\" class=\"link\">\r\n                  <li>AddressViewer</li>\r\n                </Link>\r\n                <Link to=\"/VBN\" class=\"link\">\r\n                  <li>VBN</li>\r\n                </Link>\r\n              </ul>\r\n\r\n          </div>\r\n\r\n          <Switch>\r\n            <Route path=\"/AddressViewer\" exact component={AddressViewer} />\r\n            <Route path=\"/VBN\" exact component={VBN} />\r\n          </Switch>\r\n\r\n        </div>\r\n\r\n      </Router>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}