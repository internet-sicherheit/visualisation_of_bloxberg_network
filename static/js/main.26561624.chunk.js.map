{"version":3,"sources":["modules/DataCollector.js","modules/GraphCreator.js","App.js","serviceWorker.js","index.js"],"names":["DataCollector","props","transactionList","tempList","Map","page","offset","depth","this","getContractList","contractList","console","log","getTransactionFromContractList","copyMap","i","deepSearch","convertMapToArray","url","fetch","then","response","json","result","counter","contract","Address","arrays","length","Object","keys","array","from","to","has","isVerifiedContract","source","target","sourceType","targetType","set","p","Math","round","document","getElementById","innerHTML","style","width","map","entry","added","size","convertedTransactionList","transaction","push","type","tempTxList","resultList","concat","d","transactions","found","j","address","isContract","SourceCode","forEach","value","key","sourceMap","React","Component","GraphCreator","responseObject","zoomEnable","promise","graphBoxHeight","window","innerHeight","offsetHeight","height","innerWidth","links","nodes","link","svgWidth","offsetWidth","svgHeight","zoom","d3","on","svg","attr","translate","scale","append","call","force","e","node","x","y","drag","linkDistance","charge","index","start","selectAll","data","enter","getElementsByTagName","getAttribute","select","visibility","scrollIntoView","behavior","block","inline","onresize","showLoader","getData","hideLoader","createGraph","scrollAnimation","widthResizeListener","nextProps","id","App","state","graph","pageSelectOptions","offsetSelectOptions","depthSelectOptions","className","href","defaultValue","onClick","setState","class","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.26561624.chunk.js","sourcesContent":["import { tickStep, transition } from 'd3';\r\nimport React from 'react';\r\n\r\nclass DataCollector extends React.Component {\r\n\r\n    transactionList = null;\r\n    tempList = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.transactionList = new Map();\r\n        this.tempList = new Map();\r\n    }\r\n\r\n    async getData(page, offset, depth) {\r\n\r\n        this.transactionList = new Map();\r\n        this.tempList = new Map();\r\n\r\n        // get contract list\r\n        let contractList = await this.getContractList(page, offset);\r\n        console.log(\"Get contractlist:\");\r\n        console.log(contractList);\r\n\r\n        // get transactions from contract list\r\n        await this.getTransactionFromContractList(contractList);\r\n        console.log(\"Get transactionlist from contractlist:\");\r\n        console.log(this.transactionList);\r\n\r\n        // search deeper into network\r\n        this.tempList = this.copyMap(this.transactionList);\r\n        for (let i = 1; i <= depth; i++) {\r\n            await this.deepSearch();\r\n        }\r\n\r\n        return this.convertMapToArray(this.transactionList); \r\n\r\n        //return null;\r\n    }\r\n\r\n    async getContractList(page, offset) {\r\n\r\n        const url = 'https://blockexplorer.bloxberg.org/api/api?module=contract&action=listcontracts&page=' + page + '&offset=' + offset;\r\n\r\n        let contractList = await fetch(url).then(response => response.json());\r\n\r\n        return contractList.result;\r\n    }\r\n\r\n    async getTransactionFromContractList(contractList) {  // 0x97c314818fbe22b4b5d5Ea75E52E726271aFAE3b  \r\n\r\n        let counter = 0;\r\n        for (const contract of contractList) {\r\n            let url = 'https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=';\r\n            url = url + contract.Address;\r\n\r\n            let arrays = await fetch(url).then(contractList => contractList.json());\r\n\r\n            let length = Object.keys(arrays.result).length;\r\n            let array = arrays.result;\r\n\r\n            for (let i = 0; i < length; i++) {\r\n\r\n                if (array[i].from !== \"\" && array[i].to !== \"\" && !this.transactionList.has(array[i].from + array[i].to)) {\r\n                    this.transactionList.set(\r\n                        array[i].from + array[i].to,\r\n                        {\r\n                            source: array[i].from,\r\n                            target: array[i].to,\r\n                            sourceType: ((await this.isVerifiedContract(array[i].from)) ? \"Contract\" : \"Account\"),\r\n                            targetType: \"Contract\"\r\n                        }\r\n                    )\r\n                    console.log(\"Entry \" + i + \" added.\");\r\n                }\r\n            }\r\n\r\n            counter++;\r\n\r\n            let p = Math.round(counter * 100 / contractList.length * 100) / 100;\r\n            document.getElementById(\"progress\").innerHTML = p + \"%\";\r\n            document.getElementById(\"progress\").style.width = p + \"%\";\r\n        }\r\n\r\n        document.getElementById(\"progress\").style.width = \"0%\";\r\n        document.getElementById(\"progress\").innerHTML = \"0%\";\r\n    }\r\n\r\n    async deepSearch() {\r\n\r\n        document.getElementById(\"loading_informaiton\").innerHTML = \"Starting deep search...\";\r\n\r\n        let map = this.copyMap(this.tempList);\r\n        this.tempList = new Map();\r\n\r\n        let counter = 0;\r\n        for (const entry of map) {\r\n            let url = 'https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=';\r\n            url = url + entry[1].source;\r\n\r\n            console.log(\"Lookup for \" + entry[1].source);\r\n            console.log(\"-----------\")\r\n            console.log(map);\r\n\r\n\r\n            let arrays = await fetch(url).then(json => json.json());\r\n\r\n            let length = Object.keys(arrays.result).length;\r\n            let array = arrays.result;\r\n\r\n            let added = 1;\r\n            for (let i = 0; i < length; i++) {\r\n\r\n\r\n                if (array[i].from !== \"\" && array[i].to !== \"\" && !this.transactionList.has(array[i].from + array[i].to)) {\r\n                    this.transactionList.set(\r\n                        array[i].from + array[i].to,\r\n                        {\r\n                            source: array[i].from,\r\n                            target: array[i].to,\r\n                            sourceType: (await this.isVerifiedContract(array[i].from) ? \"Contract\" : \"Account\"),\r\n                            targetType: (await this.isVerifiedContract(array[i].to) ? \"Contract\" : \"Account\")\r\n                        }\r\n                    );\r\n                    this.tempList.set(\r\n                        array[i].from + array[i].to,\r\n                        {\r\n                            source: array[i].from,\r\n                            target: array[i].to,\r\n                            sourceType: (await this.isVerifiedContract(array[i].from) ? \"Contract\" : \"Account\"),\r\n                            targetType: (await this.isVerifiedContract(array[i].to) ? \"Contract\" : \"Account\")\r\n                        }\r\n                    );\r\n                    console.log(\"Transaction entry \" + added + \" added.\");\r\n                    added++;\r\n                }\r\n\r\n            }\r\n            added = 1;\r\n\r\n            counter++;\r\n\r\n            let p = Math.round(counter * 100 / map.size * 100) / 100;\r\n            document.getElementById(\"progress\").innerHTML = p + \"%\";\r\n            document.getElementById(\"progress\").style.width = p + \"%\";\r\n        }\r\n        this.tempList = this.copyMap(map);\r\n\r\n        document.getElementById(\"loading_informaiton\").innerHTML = \"Loading...\";\r\n    }\r\n\r\n    async getTransactionsFromAccount(transactionList, depth) {\r\n        console.log(\"original tx list\");\r\n        console.log(transactionList);\r\n\r\n        let convertedTransactionList = [];\r\n\r\n\r\n        for (const transaction of transactionList) {\r\n            convertedTransactionList.push({ source: transaction.target, target: transaction.source, type: \"Contract\" });\r\n        }\r\n\r\n        console.log(\"Converted tx list\");\r\n        console.log(convertedTransactionList);\r\n\r\n        transactionList = convertedTransactionList;\r\n\r\n        console.log(\"Starting with DEPTH -->  \" + depth);\r\n\r\n        let resultList = [];\r\n        let tempTxList = [];\r\n\r\n        resultList = resultList.concat(transactionList);\r\n\r\n        for (let d = 1; d <= depth; d++) {\r\n            console.log(\"DEPTH -->  \" + d);\r\n\r\n            let transactions = [];\r\n            for (const transaction of transactionList) {\r\n                let url = 'https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=';\r\n                url = url + transaction.target;\r\n                console.log(transaction.target);\r\n\r\n                let arrays = await fetch(url).then(transactionList => transactionList.json());\r\n\r\n                let length = Object.keys(arrays.result).length;\r\n                let array = arrays.result;\r\n\r\n                for (let i = 0; i < length; i++) {\r\n\r\n\r\n                    if (transactions.length === 0) {\r\n                        transactions.push({ source: array[i].from, target: array[i].to, type: \"Contract\" });\r\n\r\n                    }\r\n\r\n                    let found = 0;\r\n                    for (let j = 0; j < transactions.length; j++) {\r\n\r\n                        if (transactions[j].source === array[i].from && transactions[j].target === array[i].to) {\r\n                            found = 1;\r\n                        }\r\n\r\n                    }\r\n                    if (found === 0 && array[i].to !== \"\") {\r\n\r\n                        if (array[i].from !== transaction.target) {\r\n                        } else {\r\n                            transactions.push({ source: array[i].from, target: array[i].to, type: \"Contract\" });\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n\r\n\r\n                }\r\n                for (let i = 0; i < transactions.length; i++) {\r\n                    tempTxList.push({ source: transactions[i].source, target: transactions[i].target, type: \"Contract\" });\r\n                }\r\n                console.log(\"TEMP-TX-LIST\");\r\n                console.log(tempTxList);\r\n            }\r\n            for (let i = 0; i < tempTxList.length; i++) {\r\n                resultList.push({ source: tempTxList[i].source, target: tempTxList[i].target, type: \"Contract\" });\r\n            }\r\n            console.log(\"RESULT-LIST\");\r\n            console.log(resultList);\r\n\r\n            transactionList = tempTxList;\r\n            tempTxList = [];\r\n        }\r\n        return (depth == 0) ? transactionList : resultList;\r\n    }\r\n\r\n    async isVerifiedContract(address) {\r\n\r\n        let isContract = false;\r\n\r\n        let url = \"https://blockexplorer.bloxberg.org/api/api?module=contract&action=getsourcecode&address=\" + address;\r\n        let result = await fetch(url).then(json => json.json());\r\n\r\n        let contractSourceCode = result.result[0].SourceCode;\r\n\r\n        if (contractSourceCode) {\r\n            isContract = true;\r\n        }\r\n\r\n        return isContract;\r\n    }\r\n\r\n    convertMapToArray(map) {\r\n        let result = [];\r\n\r\n        map.forEach((value, key) => {\r\n            result.push({ source: value.source, target: value.target, sourceType: value.sourceType, targetType: value.targetType });\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    copyMap(sourceMap) {\r\n        let result = new Map();\r\n\r\n        for (const entry of sourceMap) {\r\n            result.set(entry[1].source + entry[1].target, { source: entry[1].source, target: entry[1].target, sourceType: entry[1].sourceType, targetType: entry[1].targetType });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport default DataCollector;","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport './styles.css';\r\nimport DataCollector from './DataCollector';\r\n\r\nclass GraphCreator extends React.Component {\r\n\r\n    responseObject = null;\r\n    zoomEnable = true;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Consturctor.\")\r\n        console.log(props);\r\n        this.responseObject = new DataCollector();\r\n    }\r\n\r\n    createGraph(promise) {\r\n        console.log(\"create graph:\");\r\n\r\n        let graphBoxHeight = window.innerHeight - document.getElementById(\"address_information\").offsetHeight;\r\n        document.getElementById(\"graph_box\").style.height = graphBoxHeight + \"px\";\r\n\r\n        let height = graphBoxHeight;\r\n        let width = window.innerWidth ;\r\n\r\n        let links = promise;\r\n\r\n        console.log(\"links\");\r\n        console.log(links);\r\n\r\n\r\n        let testNodes = [\r\n            { source: \"0x2030bed7b300cef3d4455c8f665d58a4be4e82f5\", target: \"\", type: \"Contract\" },\r\n            { source: \"0xd7bcafc640fc76def22fd2c64e3f53936a3047ca\", target: \"0xad1ae4665bb880a96faae3576c49bf01040e74e6\", type: \"Contract\" },\r\n            { source: \"0xab59a1ea1ac9af9f77518b9b4ad80942ade35088\", target: \"0x0215627f70f416c1f9ea89085ac956c00c657447\", type: \"Contract\" },\r\n            { source: \"0xab59a1ea1ac9af9f77518b9b4ad80942ade35088\", target: \"0x9ba3558b9d6289d8a5fbd76bfa78423174aac7bf\", type: \"Contract\" },\r\n            { source: \"0xd748bf41264b906093460923169643f45bdbc32e\", target: \"0xa63cdbc37e9434b11350087279e9c11a4b4ba8fe\", type: \"Contract\" },\r\n            { source: \"0xd748bf41264b906093460923169643f45bdbc32e\", target: \"0x97a9f79875087c6e78c446a725aab43c4555acbf\", type: \"Contract\" }\r\n\r\n            /*{source: \"0x2030bed7b300cef3d4455c8f665d58a4be4e82f5\", target: \"\"},\r\n            {source: \"0xd7bcafc640fc76def22fd2c64e3f53936a3047ca\", target: \"0xad1ae4665bb880a96faae3576c49bf01040e74e6\"},\r\n            {source: \"0xab59a1ea1ac9af9f77518b9b4ad80942ade35088\", target: \"0x0215627f70f416c1f9ea89085ac956c00c657447\"},\r\n            {source: \"0xab59a1ea1ac9af9f77518b9b4ad80942ade35088\", target: \"0x9ba3558b9d6289d8a5fbd76bfa78423174aac7bf\"},\r\n            {source: \"0xd748bf41264b906093460923169643f45bdbc32e\", target: \"0xa63cdbc37e9434b11350087279e9c11a4b4ba8fe\"},\r\n            {source: \"0xd748bf41264b906093460923169643f45bdbc32e\", target: \"0x97a9f79875087c6e78c446a725aab43c4555acbf\"} */\r\n\r\n\r\n        ]\r\n\r\n        // links = testNodes;\r\n\r\n        // create empty nodes array\r\n        let nodes = {};\r\n\r\n        // compute nodes from links data\r\n        links.forEach(function (link) {\r\n            link.source = nodes[link.source] ||\r\n                (nodes[link.source] = { source: link.source, type: link.sourceType });\r\n            link.target = nodes[link.target] ||\r\n                (nodes[link.target] = { target: link.target, type: link.targetType });\r\n        });\r\n\r\n        console.log(nodes);\r\n\r\n        let svgWidth = document.getElementById(\"address_information\").offsetWidth - 2;\r\n        let svgHeight = height - 20;\r\n\r\n        let zoom = d3.behavior.zoom().on(\"zoom\", updateZoom);\r\n\r\n        document.getElementById(\"container\").innerHTML = \"\";\r\n        // add a SVG to the body for our viz\r\n        let svg = d3.select('#container').append('svg')\r\n            .attr('width', svgWidth)\r\n            .attr('height', svgHeight)\r\n            .style(\"cursor\",\"move\")\r\n            .call(zoom)\r\n            .append(\"g\");\r\n\r\n\r\n        // use the force\r\n        let force = d3.layout.force() //build the layout\r\n            .size([svgWidth, svgHeight]) //specified earlier\r\n            .nodes(d3.values(nodes)) //add nodes\r\n            .links(links) //add links\r\n            .on(\"tick\", tick) //what to do\r\n            .linkDistance(300) //set for proper svg size\r\n            .charge(function (d) {\r\n                var charge = -200;\r\n                if (d.index === 0) charge = 2.5 * charge;\r\n                return charge;\r\n            })\r\n            .start(); //kick the party off!\r\n\r\n        // add the links\r\n        let link = svg.selectAll('.link')\r\n            .data(links)\r\n            .enter().append('line')\r\n            .attr('class', 'link');\r\n\r\n        // add the nodes\r\n        let node = svg.selectAll('.node')\r\n            .data(force.nodes()) //add\r\n            .enter().append('circle')\r\n            .style(\"cursor\",\"auto\")\r\n            .style(\"fill\", function (d) {\r\n                if (d.type === \"Contract\") {\r\n                    return \"orange\";\r\n                }\r\n            })\r\n            .attr('class', 'node')\r\n            .attr('r', width * 0.005) //radius of circle\r\n            .on(\"click\", function (d) {\r\n                if (d.type === \"Contract\") {\r\n                    document.getElementById(\"address_information\").innerHTML = \r\n                      \" <p class='labels'>Type:</p><p class='values'>\" + d.type + \"</p>\"\r\n                    + \"<p class='labels'>Address:</p><p class='values'><a href='https://blockexplorer.bloxberg.org/address/\" + d.target + \"' target='_blank'>\" + d.target + \"</a></p>\"\r\n                } else {\r\n                    document.getElementById(\"address_information\").innerHTML = \r\n                      \" <p class='labels'>Type:</p><p class='values'>\" + d.type + \"</p>\"\r\n                    + \"<p class='labels'>Address:</p><p class='values'><a href='https://blockexplorer.bloxberg.org/address/\" + d.source + \"' target='_blank'>\" + d.source + \"</a></p>\";\r\n                }\r\n            })\r\n            .on(\"mousedown\", function() {\r\n                d3Attributes();\r\n                this.zoomEnable = false;\r\n                console.log(\"ZoomEnabled? \" + this.zoomEnable);\r\n                d3.select('#container').select('svg').call(d3.behavior.zoom().on(\"zoom\", null));\r\n            })\r\n            .on(\"mouseup\", function() {\r\n                this.zoomEnable = true;\r\n                console.log(\"ZoomEnabled? \" + this.zoomEnable);\r\n                d3.select('#container').select('svg').call(zoom);\r\n            })\r\n            .on(\"focus\", function() {\r\n                d3.select(this).style(\"border-color\", \"red\"); // fehlerhaft\r\n            });\r\n\r\n        function tick(e) {\r\n\r\n            node.attr('cx', function (d) { return d.x; })\r\n                .attr('cy', function (d) { return d.y; })\r\n                .call(force.drag);\r\n\r\n            link.attr('x1', function (d) { return d.source.x; })\r\n                .attr('y1', function (d) { return d.source.y; })\r\n                .attr('x2', function (d) { return d.target.x; })\r\n                .attr('y2', function (d) { return d.target.y; });\r\n        }\r\n\r\n        function updateZoom() {\r\n               svg.attr(\"transform\",\r\n                \"translate(\" + d3.event.translate + \")\"\r\n                + \" scale(\" + d3.event.scale + \")\");\r\n        }\r\n\r\n        function d3Attributes() {\r\n            console.log(document.getElementsByTagName(\"g\")[0].getAttribute(\"transform\"));\r\n        }\r\n    \r\n        console.log(\"graph drawed.\");\r\n    }\r\n\r\n    showLoader() {\r\n        document.getElementById(\"address_information\").innerHTML = \"Select a node for node information.\";\r\n        document.getElementById(\"address_information\").style.visibility = \"hidden\";\r\n        document.getElementById(\"container\").style.visibility = \"hidden\";\r\n        document.getElementById(\"loader\").style.visibility = \"visible\";\r\n    }\r\n\r\n    hideLoader() {\r\n        document.getElementById(\"address_information\").style.visibility = \"visible\";\r\n        document.getElementById(\"container\").style.visibility = \"visible\";\r\n        document.getElementById(\"loader\").style.visibility = \"hidden\";\r\n        document.getElementById(\"progress\").style.width = \"0%\";\r\n        document.getElementById(\"progress\").innerHTML = \"0%\";\r\n    }\r\n\r\n    scrollAnimation() {\r\n        document.getElementById(\"address_information\").scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"start\",\r\n            inline: \"nearest\"\r\n        });\r\n    }\r\n\r\n    widthResizeListener() {\r\n        window.onresize = function () {\r\n            document.getElementsByTagName(\"svg\")[0].style.width = document.getElementById(\"address_information\").offsetWidth - 2;\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        console.log(\"Component will mount.\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Component did mount.\");\r\n        this.showLoader();\r\n        this.responseObject.getData(this.props.page, this.props.offset, this.props.depth).then((promise) => {\r\n            this.hideLoader();\r\n            this.createGraph(promise);\r\n\r\n            this.scrollAnimation();\r\n            this.widthResizeListener();\r\n        });\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        console.log(\"Component will update.\");\r\n        this.showLoader();\r\n        this.responseObject.getData(nextProps.page, nextProps.offset, nextProps.depth).then((promise) => {\r\n            this.hideLoader();\r\n            this.createGraph(promise);\r\n\r\n            this.scrollAnimation();\r\n            this.widthResizeListener();\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"Component did update.\");\r\n    }\r\n\r\n    render() {\r\n        return (<div id=\"container\"></div>);\r\n    }\r\n}\r\n\r\nexport default GraphCreator;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport './modules/styles.css';\r\nimport GraphCreator from './modules/GraphCreator';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    page: 0,\r\n    offset: 0,\r\n    depth: 0\r\n  };\r\n\r\n  render() {\r\n\r\n    let graph = (this.state.page !== 0) ? <GraphCreator page={this.state.page} offset={this.state.offset} depth={this.state.depth} /> : null;\r\n\r\n    const maxPage = 100;\r\n    const maxOffset = 1800;\r\n    const maxDepth = 5;\r\n\r\n    const pageSelectedValue = 2;\r\n    const offsetSelectedValue = 1;\r\n    const depthSelectedValue = 0;\r\n\r\n    const pageSelectOptions = [];\r\n    for(let i = 1; i <= maxPage; i++) {\r\n      pageSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n    }\r\n    const offsetSelectOptions = [];\r\n    for(let i = 1; i <= maxOffset; i++) {\r\n      offsetSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n    }\r\n    const depthSelectOptions = [];\r\n    for(let i = 0; i <= maxDepth; i++) {\r\n      depthSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div id=\"banner\">\r\n          <h1 className=\"title\">Visualisation of Bloxsberg-Network</h1>\r\n        </div>\r\n        <div id=\"site_informaiton\">\r\n          <p>This website will produce a force directed d3 graph that will visualizise the Bloxberg Network by using the <a href=\"https://blockexplorer.bloxberg.org/api_docs\">Bloxberg RPC API</a>.</p>\r\n        </div>\r\n        <div id=\"values_informaiton\">\r\n          <p id=\"text\">\r\n            <b>Page</b> represents the page number to be used for pagination.\r\n          </p>\r\n          <p id=\"text\">\r\n            <b>Offset</b> represents the maximum number of records to return when paginating.\r\n          </p>\r\n          <p id=\"text\">\r\n            <b>Depth</b> represents how deep the http requests will search into to network.\r\n          </p>\r\n        </div>\r\n        <div id=\"control\">\r\n          <label>Page:</label>\r\n          <select id=\"page_selection\" defaultValue={pageSelectedValue}>\r\n            {pageSelectOptions}\r\n          </select>\r\n          <label>Offset:</label>\r\n          <select id=\"offset_selection\" defaultValue={offsetSelectedValue}>\r\n            {offsetSelectOptions}\r\n          </select>\r\n          <label>Depth:</label>\r\n          <select id=\"depth_selection\" defaultValue={depthSelectedValue}>\r\n            {depthSelectOptions}\r\n          </select>\r\n          <input type=\"submit\" id=\"button\" value=\"Create Graph\" onClick={() => {\r\n\r\n            let page = document.getElementById(\"page_selection\").value;\r\n            let offset = document.getElementById(\"offset_selection\").value;\r\n            let depth = document.getElementById(\"depth_selection\").value;\r\n\r\n            console.log(\"page -> \" + page);\r\n            console.log(\"offset -> \" + offset);\r\n            console.log(\"depth -> \" + depth);\r\n\r\n            this.setState({ page: page, offset: offset, depth: depth});\r\n            \r\n          }} />\r\n        </div>\r\n        <div id=\"loader\" style={{visibility: \"visable\"}}>\r\n          <div id=\"progressbar\">\r\n            <div id=\"progress\"></div>\r\n            <p id=\"loading_informaiton\">Loading...</p>\r\n          </div>\r\n        </div>\r\n        <div id=\"address_information\">\r\n          <p class=\"labels\">Select a node for node information.</p>\r\n        </div>\r\n        <div id=\"graph_box\">\r\n          {graph}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}