{"version":3,"sources":["modules/address_viewer/code/model/AddressManager.js","modules/address_viewer/code/DataFetcher.js","modules/address_viewer/code/TableCreator.js","modules/address_viewer/code/AddressViewer.js","modules/vbn/code/DataCollector.js","modules/vbn/code/GraphCreator.js","modules/vbn/code/VBN.js","App.js","serviceWorker.js","index.js"],"names":["AddressManager","type","name","address","isVerified","transactionList","this","DataFetcher","props","Web3Url","URLTransactionList","URLTransactionInfo","addressManager","web3Url","URLContractSourceCode","console","log","convertTime","initAddressManager","saveTransactions","isContract","isVerifiedContract","getContractName","contractName","getAccountName","accountName","fetch","response","text","httpText","result","match","substring","length","adderss","then","json","transactionHash","getTransactions","transactions","Object","keys","resultArray","i","push","from","to","time","parseInt","timeStamp","input","Web3","require","web3","providers","HttpProvider","eth","getCode","ContractName","Date","toLocaleString","decodeData","array","base62","charset1","indexCharset","encode","str","byteToHex","byteArray","Array","byte","toString","slice","join","React","Component","TableCreator","htmlCode","responseObject","promise","veriefied","document","getElementById","innerHTML","style","visibility","headlines","getTableHeadlines","addToHTMLCode","code","forEach","key","scrollIntoView","behavior","block","inline","fetchData","renderData","scrollAnimation","nextProps","className","id","AddressViewer","state","table","class","placeholder","aria-label","aria-describedby","onClick","value","setState","window","alert","DataCollector","transactionMap","tempMap","Map","page","offset","depth","setLoadingbar","getContractList","contractList","getTransactionFromContractList","copyMap","round","deepSearch","convertMapToArray","url","counter","contract","Address","arrays","mapContains","source","target","sourceType","targetType","set","p","Math","map","entry","size","addCounter","temp","sourceMap","x","y","has","prozent","width","GraphCreator","zoomEnable","graphBoxHeight","innerHeight","offsetHeight","height","innerWidth","links","nodes","link","nodeAddress","typeSource","typeTarget","svgWidth","offsetWidth","svgHeight","zoom","d3","on","svg","attr","translate","scale","append","call","force","e","node","d","drag","linkDistance","charge","index","start","selectAll","data","enter","select","floor","now","startTime","endTime","onresize","getElementsByTagName","timeStap","showLoader","getData","hideLoader","createGraph","calculationTime","widthResizeListener","VBN","graph","pageSelectOptions","offsetSelectOptions","depthSelectOptions","href","defaultValue","App","path","exact","component","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2b042cec.chunk.js","sourcesContent":["export default class AddressManager {\r\n\r\n    type = null;\r\n    name = null;\r\n    address = null;\r\n    isVerified = null;\r\n\r\n    transactionList = null;\r\n\r\n    constructor(type, name, address, isVerified) {\r\n        this.type = type;\r\n        this.name = name;\r\n        this.address = address;\r\n        this.isVerified = isVerified;\r\n\r\n        this.transactionList = [];\r\n    }\r\n}","import React from 'react';\r\nimport AddressManager from './model/AddressManager';\r\n\r\nclass DataFetcher extends React.Component {\r\n\r\n    Web3Url = null;\r\n    URLTransactionList = null;\r\n    URLTransactionInfo = null;\r\n    addressManager = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.web3Url = \"https://core.bloxberg.org/\";\r\n        this.URLTransactionList = \"https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=\";\r\n        this.URLTransactionInfo = \"https://blockexplorer.bloxberg.org/api/api?module=transaction&action=gettxinfo&txhash=\";\r\n        this.URLContractSourceCode = \"https://blockexplorer.bloxberg.org/api/api?module=contract&action=getsourcecode&address=\";\r\n        this.addressManager = null;\r\n    }\r\n\r\n    async fetchData(address) {\r\n\r\n        console.log(this.convertTime(1559567750));\r\n\r\n        /* console.log(\"getAddressName\");\r\n        console.log(await this.getAccountName(\"0xE5a9654C7e190701016EBf18206020bf16D8Beab\"));\r\n        console.log(\"getTransactions\");\r\n        console.log(await this.getTransactions(\"0xE5a9654C7e190701016EBf18206020bf16D8Beab\"));\r\n        console.log(\"getTransacitonInfo\");\r\n        console.log(await this.getTransactionInfo(\"0x7aa439813cc35a3bf7d5802f0732bb5fef37173f09ef3146a6755df5692a58fe\"));\r\n        console.log(\"isContract?\");\r\n        console.log(await this.isContract(\"0xE5a9654C7e190701016EBf18206020bf16D8Beab\"));\r\n        console.log(\"isVerifiedContract?\");\r\n        console.log(await this.isVerifiedContract(\"0xE5a9654C7e190701016EBf18206020bf16D8Beab\"));\r\n        console.log(\"getContractName\");\r\n        console.log(await this.getContractName(\"0xE5a9654C7e190701016EBf18206020bf16D8Beab\")); */\r\n\r\n        this.addressManager = await this.initAddressManager(address);\r\n        await this.saveTransactions(address);\r\n\r\n        return this.addressManager;\r\n    }\r\n\r\n    async initAddressManager(address) {\r\n\r\n        let addressManager = null;\r\n\r\n        let isContract = await this.isContract(address);\r\n        let isVerified = await this.isVerifiedContract(address);\r\n        let contractName = await this.getContractName(address);\r\n        let accountName = await this.getAccountName(address);\r\n\r\n        console.log(isContract);\r\n        console.log(isVerified);\r\n        console.log(contractName);\r\n        console.log(accountName);\r\n        console.log(address);\r\n\r\n        if (isContract) {\r\n            addressManager = new AddressManager(\"Contract\", contractName, address, isVerified);\r\n        } else {\r\n            addressManager = new AddressManager(\"Account\", accountName, address, null);\r\n        }\r\n\r\n        return addressManager;\r\n    }\r\n\r\n    async getAccountName(address) {\r\n\r\n        let response = await fetch(\"https://blockexplorer.bloxberg.org/address/\" + address + \"/transactions\");\r\n        let httpText = await response.text();\r\n\r\n        let regex = '<strong class=\"mr-4 mb-2 text-dark\" title=\"[a-zA-Z0-9. ]*\">';\r\n\r\n        let result = httpText.match(regex);\r\n\r\n        let accountName = null;\r\n\r\n        if (result !== null) {\r\n            accountName = result[0].substring(43, result[0].length - 2);\r\n        }\r\n\r\n        return accountName;\r\n    }\r\n\r\n    async getTransactions(adderss) {\r\n        let result = await fetch(this.URLTransactionList + adderss).then(response => response.json());\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    async getTransactionInfo(transactionHash) {\r\n        let result = await fetch(this.URLTransactionInfo + transactionHash).then(response => response.json());\r\n        console.log(result);\r\n\r\n        return result;\r\n    }\r\n\r\n    async saveTransactions(address) {\r\n        let transactions = await this.getTransactions(address);\r\n\r\n        let length = Object.keys(transactions.result).length;\r\n        let resultArray = transactions.result;\r\n\r\n        /*\r\n        console.log(\"RESULTARRAY:\");\r\n        console.log(resultArray);\r\n        */\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            this.addressManager.transactionList.push({ from: resultArray[i].from, to: resultArray[i].to, time: this.convertTime(parseInt(resultArray[i].timeStamp)), input: resultArray[i].input });\r\n        }\r\n    }\r\n\r\n    async isContract(address) {\r\n\r\n        let isContract = true;\r\n\r\n        const Web3 = require('web3');\r\n        const web3 = new Web3(new Web3.providers.HttpProvider(this.web3Url));\r\n        let result = await web3.eth.getCode(address);\r\n\r\n        if (result === \"0x\") {\r\n            isContract = false;\r\n        }\r\n\r\n        return isContract;\r\n    }\r\n\r\n    async isVerifiedContract(address) {\r\n        let isVerifiedContract = true;\r\n\r\n        let result = await fetch(this.URLContractSourceCode + address).then(response => response.json());\r\n\r\n        if (typeof result.result[0].ContractName === \"undefined\") {\r\n            isVerifiedContract = false;\r\n        }\r\n\r\n        return isVerifiedContract;\r\n    }\r\n\r\n    async getContractName(address) {\r\n        let result = await fetch(this.URLContractSourceCode + address).then(response => response.json());\r\n\r\n        let contractName = result.result[0].ContractName;\r\n\r\n        return (typeof contractName !== \"undefined\") ? contractName : null;\r\n    }\r\n\r\n    convertTime(timeStamp) {\r\n        //console.log(timeStamp);\r\n        return new Date(timeStamp * 1000).toLocaleString();\r\n    }\r\n\r\n    test() {\r\n\r\n        /*\r\n        ISCC Base58 encoding: 0x00f71201ad85f5a189102b2a76b05434d95a204f077f99ee368d213022628ba1e4fa5686\r\n        → Resolves to: \r\n        Meta-ID: CCLYJLQWKidp1\r\n        Content-ID: CT8ZSFJGhmUcM\r\n        Data-ID: CDEZgdCTV5Tum\r\n        Instance-ID: CR6kNU6eVKkLM\r\n        Tophash: 22628ba1e4fa56864075e614b5930086 944d530ec775adfcc5191ed8e4b38cc6\r\n        */\r\n\r\n        let data = \"0x989cda35000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002400f71201ad85f5a189102b2a76b05434d95a204f077f99ee368d213022628ba1e4fa568600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002022628ba1e4fa56864075e614b5930086944d530ec775adfcc5191ed8e4b38cc6\";\r\n\r\n        const InputDataDecoder = require('ethereum-input-data-decoder');\r\n\r\n        const abi = [{ \"type\": \"event\", \"name\": \"ISCC\", \"inputs\": [{ \"type\": \"address\", \"name\": \"actor\", \"internalType\": \"address\", \"indexed\": true }, { \"type\": \"bytes\", \"name\": \"iscc\", \"internalType\": \"bytes\", \"indexed\": false }, { \"type\": \"bytes\", \"name\": \"tophash\", \"internalType\": \"bytes\", \"indexed\": false }], \"anonymous\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"outputs\": [], \"name\": \"declare\", \"inputs\": [{ \"type\": \"bytes\", \"name\": \"iscc\", \"internalType\": \"bytes\" }, { \"type\": \"bytes\", \"name\": \"tophash\", \"internalType\": \"bytes\" }] }];\r\n        const decoder = new InputDataDecoder(abi);\r\n        const result = decoder.decodeData(data);\r\n\r\n        console.log(result);\r\n\r\n        let bytes = \"0 247 18 1 173 133 245 161 137 - 16 43 42 118 176 84 52 217 90 - 32 79 7 127 153 238 54 141 33 - 48 34 98 139 161 228 250 86 134\";\r\n        let encodedString = \"00f71201ad85f5a189 - 102b2a76b05434d95a204f077f99ee368d213022628ba1e4fa5686\";\r\n\r\n        let array = [0,\r\n            247,\r\n            18,\r\n            1,\r\n            173,\r\n            133,\r\n            245,\r\n            161,\r\n            137,\r\n            16,\r\n            43,\r\n            42,\r\n            118,\r\n            176,\r\n            84,\r\n            52,\r\n            217,\r\n            90,\r\n            32,\r\n            79,\r\n            7,\r\n            127,\r\n            153,\r\n            238,\r\n            54,\r\n            141,\r\n            33,\r\n            48,\r\n            34,\r\n            98,\r\n            139,\r\n            161,\r\n            228,\r\n            250,\r\n            86,\r\n            134];\r\n\r\n        let base62 = require(\"base62/lib/custom\");\r\n\r\n        let charset1 = \"C23456789rB1ZEFGTtYiAaVvMmHUPWXKDNbcdefghLjkSnopRqsJuQwxyz\";\r\n        let charset2 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\r\n        charset1 = base62.indexCharset(charset1);\r\n        console.log(base62.encode(247, charset1));\r\n\r\n\r\n        let str = \"\";\r\n\r\n        for (let i = 0; i < array.length; i++) {\r\n            console.log(i)\r\n            if (i !== 0 && i % 8 == 0) {\r\n                str = str + \"-\";\r\n            }\r\n            str = str + base62.encode(array[i], charset1);\r\n        }\r\n\r\n        console.log(\"String\");\r\n        console.log(str);\r\n\r\n        console.log(this.byteToHex(array));\r\n    }\r\n\r\n    byteToHex(byteArray) {\r\n        return Array.from(byteArray, function (byte) {\r\n            return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n        }).join('');\r\n    }\r\n\r\n}\r\n\r\nexport default DataFetcher;","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport '../../../bootstrap.min.css';\r\nimport DataFetcher from './DataFetcher';\r\nimport { html } from 'd3';\r\n\r\nclass TableCreator extends Component {\r\n\r\n    htmlCode = '';\r\n    responseObject = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Consturctor:\")\r\n        console.log(props);\r\n        this.responseObject = new DataFetcher();\r\n    }\r\n\r\n    renderData(promise) {\r\n        let veriefied = promise.isVerified === true ? \"verified\" : \"not verified\";\r\n        let transactions = promise.transactionList;\r\n        console.log(\"Transactions\")\r\n        console.log(transactions);\r\n\r\n        document.getElementById(\"type\").innerHTML = promise.type;\r\n        document.getElementById(\"name\").innerHTML = promise.name;\r\n        document.getElementById(\"address\").innerHTML = promise.address;\r\n        document.getElementById(\"verified\").innerHTML = veriefied;\r\n\r\n        if (promise.name === null) {\r\n            document.getElementById(\"name\").style.visibility = \"hidden\";\r\n        } else {\r\n            document.getElementById(\"name\").style.visibility = \"visible\";\r\n        }\r\n        if (promise.isVerified === null) {\r\n            document.getElementById(\"verified\").style.visibility = \"hidden\";\r\n        } else {\r\n            document.getElementById(\"verified\").style.visibility = \"visible\";\r\n        }        \r\n        \r\n        /*\r\n        let table = \r\n        <table class=\"table\">\r\n            <thead class=\"thead-dark\">\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">First</th>\r\n                    <th scope=\"col\">Last</th>\r\n                    <th scope=\"col\">Handle</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">1</th>\r\n                    <td>Mark</td>\r\n                    <td>Otto</td>\r\n                    <td>@mdo</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">2</th>\r\n                    <td>Jacob</td>\r\n                    <td>Thornton</td>\r\n                    <td>@fat</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">3</th>\r\n                    <td>Larry</td>\r\n                    <td>the Bird</td>\r\n                    <td>@twitter</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>;\r\n        */\r\n\r\n        let headlines = this.getTableHeadlines(transactions);\r\n\r\n        this.addToHTMLCode(\r\n            '<table class=\"table\" style=\"table-layout:fixed; word-wrap:break-word;\">'\r\n            + '<thead class=\"thead-dark\">' \r\n                + '<tr>'\r\n                );\r\n\r\n        this.addToHTMLCode('<th scope=\"col\">#</th>');\r\n\r\n        for(let i = 0; i < headlines.length; i++) {\r\n            \r\n            this.addToHTMLCode('<th scope=\"col\">' + headlines[i] + '</th>');\r\n        }\r\n\r\n        this.addToHTMLCode(\r\n            '</tr>'\r\n                + '</thead>'\r\n                + '<tbody>');\r\n        \r\n        for (let i = 0; i < transactions.length; i++) {\r\n            this.addToHTMLCode(\r\n                '<tr>'\r\n                    + '<th scope=\"row\">' + (i + 1) + '</th>'\r\n                    + '<td>' + transactions[i].from + '</td>'\r\n                    + '<td>' + transactions[i].to + '</td>'\r\n                    + '<td>' + transactions[i].time + '</td>'\r\n                    + '<td>' + transactions[i].input + '</td>'\r\n                + '</tr>'\r\n            );\r\n        }\r\n\r\n        this.addToHTMLCode(\r\n            '</tbody>'\r\n                + '</table>'\r\n        ); \r\n    \r\n        document.getElementById(\"table\").innerHTML = this.htmlCode;\r\n    }\r\n\r\n    addToHTMLCode(code) {\r\n        this.htmlCode = this.htmlCode + code;\r\n    }\r\n\r\n    getTableHeadlines(transactions) {\r\n        let headlines = [];\r\n        \r\n        Object.keys(transactions[0]).forEach(function(key) {\r\n            headlines.push(key);\r\n        });\r\n\r\n        return headlines;\r\n    }\r\n    \r\n    scrollAnimation() {\r\n        document.getElementById(\"type\").scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"start\",\r\n            inline: \"nearest\"\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let promise = this.responseObject.fetchData(this.props.address);\r\n        promise.then((promise) => {\r\n            this.renderData(promise);\r\n            this.scrollAnimation();\r\n        });\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        let promise = this.responseObject.fetchData(nextProps.address);\r\n        promise.then((promise) => {\r\n            this.renderData(promise);\r\n            this.scrollAnimation();\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        \r\n\r\n        return (\r\n            <div className=\"TableCreator\">\r\n                <h2 id=\"type\"></h2>\r\n                <p id=\"name\"></p>\r\n                <p id=\"address\"></p>\r\n                <p id=\"verified\"></p>\r\n                <div id=\"table\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableCreator;","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport '../../../bootstrap.min.css';\r\nimport TableCreator from './TableCreator';\r\n\r\nclass AddressViewer extends Component {\r\n\r\n  state = {\r\n    address: null\r\n  };\r\n\r\n  render() {\r\n\r\n    let table = (this.state.address !== null) ? <TableCreator address={this.state.address} /> : null;\r\n\r\n    return (\r\n      <div className=\"AddressViewer\">\r\n\r\n        <div id=\"banner\">\r\n          <h1 className=\"title\">Adderss Viewer</h1>\r\n        </div>\r\n\r\n        <div id=\"searchbar\">\r\n          <div id=\"address_input\">\r\n            <div class=\"input-group mb-3\">\r\n              <input type=\"text\" id=\"input\" class=\"form-control\" placeholder=\"Enter address...\" aria-label=\"Enter address...\" aria-describedby=\"button-addon2\" />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onClick={() => {\r\n\r\n                  let address = document.getElementById(\"input\").value;\r\n\r\n                  let regex = \"^0x[a-fA-F0-9]{40}$\";\r\n                  if(address != \"\") {\r\n                    if(address.match(regex)) {\r\n                      console.log(\"address -> \" + address);\r\n                      this.setState({ address: address });\r\n                    } else {\r\n                      window.alert(\"Invalid address.\");\r\n                    }\r\n                  } else {\r\n                    window.alert(\"Inputfield is empty.\");\r\n                  }\r\n\r\n                }}>Search</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"table_box\">\r\n          {table}\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default AddressViewer;","import React from 'react';\r\n\r\nclass DataCollector extends React.Component {\r\n\r\n    transactionMap = null;\r\n    tempMap = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.transactionMap = new Map();\r\n        this.tempMap = new Map();\r\n    }\r\n\r\n    async getData(page, offset, depth) {\r\n\r\n        this.setLoadingbar(0);\r\n\r\n        this.transactionMap = new Map();\r\n        this.tempMap = new Map();\r\n\r\n        // get contract list\r\n        console.log(\"Function - getContractList(page, offsett):\");\r\n        let contractList = await this.getContractList(page, offset);\r\n        console.log(\"CONTRACTLIST:\");\r\n        console.log(contractList);\r\n\r\n        // get transactions from contract list\r\n        console.log(\"Function - getTransactionFromContractList(contractList):\");\r\n        await this.getTransactionFromContractList(contractList);\r\n        console.log(\"TRANSACTIONMAP BEFORE DEEEP SEARCH:\");\r\n        console.log(this.transactionMap);\r\n\r\n        // search deeper into network\r\n        console.log(\"Function - deepSearch(depth, round):\");\r\n        this.tempMap = await this.copyMap(this.transactionMap);\r\n        if (depth != 0) {\r\n            for (let round = 1; round <= depth; round++) {\r\n                await this.deepSearch(depth, round);\r\n            }\r\n            console.log(\"TRANSACTIONMAP AFTER DEEEP SEARCH:\");\r\n            console.log(this.transactionMap);\r\n        }\r\n\r\n        document.getElementById(\"loading_informaiton\").innerHTML = \"Loading...\";\r\n\r\n        return this.convertMapToArray(this.transactionMap);\r\n    }\r\n\r\n    async getContractList(page, offset) {\r\n\r\n        const url = 'https://blockexplorer.bloxberg.org/api/api?module=contract&action=listcontracts&page=' + page + '&offset=' + offset;\r\n\r\n        let contractList = await fetch(url).then(response => response.json());\r\n\r\n        return contractList.result;\r\n    }\r\n\r\n    async getTransactionFromContractList(contractList) {\r\n\r\n        console.log(\"Searching for contract transactions:\");\r\n        \r\n        let counter = 1;\r\n        for (const contract of contractList) {\r\n            let url = 'https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=';\r\n            url = url + contract.Address;\r\n\r\n            let arrays = await fetch(url).then(json => json.json());\r\n\r\n            let length = Object.keys(arrays.result).length;\r\n            let array = arrays.result;\r\n\r\n            console.log(\"   Recived \" + length + \" Transaction entries.\");\r\n\r\n            for (let i = 0; i < length; i++) {\r\n\r\n                if (array[i].from !== \"\" && array[i].to !== \"\" && !this.mapContains(this.transactionMap, array[i].from, array[i].to)) {\r\n                    this.transactionMap.set(\r\n                        array[i].from + array[i].to,\r\n                        {\r\n                            source: array[i].from,\r\n                            target: array[i].to,\r\n                            sourceType: ((await this.isContract(array[i].from)) ? \"Contract\" : \"Account\"),\r\n                            targetType: \"Contract\"\r\n                        }\r\n                    )\r\n                    console.log(\"      Transaction entry number \" + (i + 1) + \" added.\");\r\n                }\r\n            }\r\n\r\n            let p = Math.round(counter * 100 / contractList.length * 100) / 100;\r\n            this.setLoadingbar(p);\r\n\r\n            counter++;\r\n        }\r\n        \r\n        this.setLoadingbar(0);\r\n    }\r\n\r\n    async deepSearch(depth, round) {\r\n\r\n        let map = this.copyMap(this.tempMap);\r\n        this.tempMap = new Map();\r\n\r\n        let counter = 1;\r\n\r\n        console.log(\"DEEP SEARCH ROUND \" + round + \"/\" + depth);\r\n\r\n        for (const entry of map) {\r\n\r\n            console.log(\"   Look up for map entry \" + counter + \" of \" + map.size);\r\n\r\n            document.getElementById(\"loading_informaiton\").innerHTML = \"Address look up (\" + counter + \"/\" + map.size + \")<br>Depth search level (\" + round + \"/\" + depth + \")\";\r\n\r\n            let url = 'https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=';\r\n            url = url + entry[1].source;\r\n\r\n            console.log(\"      Searching transactions for address \" + entry[1].source + \" ...\");\r\n\r\n            let arrays = await fetch(url).then(json => json.json());\r\n\r\n            let length = Object.keys(arrays.result).length;\r\n            let array = arrays.result;\r\n\r\n            console.log(\"         Recived \" + length + \" Transaction entries.\");\r\n\r\n            let addCounter = 1;\r\n            for (let i = 0; i < length; i++) {\r\n\r\n                if (array[i].to !== entry[1].source) {\r\n                    let temp = array[i].from;\r\n                    array[i].from = array[i].to;\r\n                    array[i].to = temp;\r\n                }\r\n\r\n                if (array[i].from !== \"\" && array[i].to !== \"\" && !this.mapContains(this.transactionMap, array[i].from, array[i].to)) {\r\n\r\n                    this.transactionMap.set(\r\n                        array[i].from + array[i].to,\r\n                        {\r\n                            source: array[i].from,\r\n                            target: array[i].to,\r\n                            sourceType: (await this.isContract(array[i].from) ? \"Contract\" : \"Account\"),\r\n                            targetType: (await this.isContract(array[i].to) ? \"Contract\" : \"Account\")\r\n                        }\r\n                    );\r\n                    this.tempMap.set(\r\n                        array[i].from + array[i].to,\r\n                        {\r\n                            source: array[i].from,\r\n                            target: array[i].to,\r\n                            sourceType: (await this.isContract(array[i].from) ? \"Contract\" : \"Account\"),\r\n                            targetType: (await this.isContract(array[i].to) ? \"Contract\" : \"Account\")\r\n                        }\r\n                    );\r\n                    console.log(\"            Transaction entry number \" + addCounter + \" added.\");\r\n\r\n                    let p = Math.round(addCounter * 100 / length * 100) / 100;\r\n                    this.setLoadingbar(p);\r\n                }\r\n                addCounter++;\r\n            }\r\n            addCounter = 1;\r\n            counter++;\r\n\r\n            this.setLoadingbar(0);\r\n        }\r\n\r\n        console.log(\"----- MAP for round \" + round + \" -----\");\r\n        console.log(map);\r\n        console.log(\"---------------------------\");\r\n    }\r\n\r\n    async isContract(address) {\r\n\r\n        let isContract = true;\r\n\r\n        const Web3 = require('web3');\r\n        const web3 = new Web3(new Web3.providers.HttpProvider('https://core.bloxberg.org/'));\r\n        let result = await web3.eth.getCode(address);\r\n\r\n        if(result === \"0x\") {\r\n            isContract = false;\r\n        }\r\n\r\n        return isContract;\r\n    }\r\n\r\n    convertMapToArray(map) {\r\n        let array = new Array();\r\n\r\n        map.forEach((value, key) => {\r\n            array.push({ source: value.source, target: value.target, sourceType: value.sourceType, targetType: value.targetType });\r\n        });\r\n\r\n        return array;\r\n    }\r\n\r\n    copyMap(sourceMap) {\r\n        let map = new Map();\r\n\r\n        for (const entry of sourceMap) {\r\n            map.set(entry[1].source + entry[1].target, { source: entry[1].source, target: entry[1].target, sourceType: entry[1].sourceType, targetType: entry[1].targetType });\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    mapContains(map, x, y) {\r\n        return map.has(x + y) || map.has(y + x);\r\n    }\r\n\r\n    setLoadingbar(prozent) {\r\n        document.getElementById(\"progress\").style.width = prozent + \"%\";\r\n        document.getElementById(\"progress\").innerHTML = prozent + \"%\";\r\n    }\r\n\r\n}\r\n\r\nexport default DataCollector;","import React, {Component} from 'react';\r\nimport * as d3 from 'd3';\r\nimport './styles.css';\r\nimport DataCollector from './DataCollector';\r\n\r\nclass GraphCreator extends Component {\r\n\r\n    responseObject = null;\r\n    zoomEnable = true;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Consturctor:\")\r\n        console.log(props);\r\n        this.responseObject = new DataCollector();\r\n    }\r\n\r\n    createGraph(promise) {\r\n        console.log(\"Function - createGraph():\");\r\n\r\n        let graphBoxHeight = window.innerHeight - document.getElementById(\"address_information\").offsetHeight;\r\n        document.getElementById(\"graph_box\").style.height = graphBoxHeight + \"px\";\r\n\r\n        let height = graphBoxHeight;\r\n        let width = window.innerWidth;\r\n\r\n        console.log(\"PROMISE:\");\r\n        console.log(promise);\r\n\r\n        let links = promise;\r\n\r\n        console.log(\"LINKS:\");\r\n        console.log(links);\r\n\r\n        // create empty nodes array\r\n        let nodes = {};\r\n\r\n        // compute nodes from links data\r\n        links.forEach(function (link) {\r\n            link.source = nodes[link.source] ||\r\n                (nodes[link.source] = { nodeAddress: link.source, source: link.source, target: link.target, typeSource: link.sourceType, typeTarget: link.targetType });\r\n            link.target = nodes[link.target] ||\r\n                (nodes[link.target] = { nodeAddress: link.target, source: link.source, target: link.target, typeSource: link.sourceType, typeTarget: link.targetType });\r\n        });\r\n\r\n        console.log(\"NODES:\");\r\n        console.log(nodes);\r\n\r\n        let svgWidth = document.getElementById(\"address_information\").offsetWidth - 2;\r\n        let svgHeight = height - 20;\r\n\r\n        let zoom = d3.behavior.zoom().on(\"zoom\", updateZoom);\r\n\r\n        document.getElementById(\"container\").innerHTML = \"\";\r\n        // add a SVG to the body for our viz\r\n        let svg = d3.select('#container').append('svg')\r\n            .attr('width', svgWidth)\r\n            .attr('height', svgHeight)\r\n            .style(\"cursor\", \"move\")\r\n            .call(zoom)\r\n            .append(\"g\");\r\n\r\n\r\n        // use the force\r\n        let force = d3.layout.force() //build the layout\r\n            .size([svgWidth, svgHeight]) //specified earlier\r\n            .nodes(d3.values(nodes)) //add nodes\r\n            .links(links) //add links\r\n            .on(\"tick\", tick) //what to do\r\n            .linkDistance(300) //set for proper svg size\r\n            .charge(function (d) {\r\n                var charge = -200;\r\n                if (d.index === 0) charge = 2.5 * charge;\r\n                return charge;\r\n            })\r\n            .start(); //kick the party off!\r\n\r\n        // add the links\r\n        let link = svg.selectAll('.link')\r\n            .data(links)\r\n            .enter().append('line')\r\n            .attr('class', 'link');\r\n\r\n        // add the nodes\r\n        let node = svg.selectAll('.node')\r\n            .data(force.nodes()) //add\r\n            .enter().append('circle')\r\n            .style(\"cursor\", \"auto\")\r\n            .style(\"fill\", function (d) {\r\n                if (d.nodeAddress === d.source) {\r\n                    if (d.typeSource === \"Contract\") {\r\n                        return \"orange\";\r\n                    }\r\n                }\r\n                if (d.nodeAddress === d.target) {\r\n                    if (d.typeTarget === \"Contract\") {\r\n                        return \"orange\";\r\n                    }\r\n                }\r\n            })\r\n            .attr('class', 'node')\r\n            .attr('r', width * 0.005) //radius of circle\r\n            .on(\"click\", function (d) {\r\n                console.log(d);\r\n                if (d.nodeAddress === d.source) {\r\n                    document.getElementById(\"address_information\").innerHTML =\r\n                            \" <p class='labels'>Type:</p><p class='values'>\" + d.typeSource + \"</p>\"\r\n                            + \"<p class='labels'>Address:</p><p class='values'><a href='https://blockexplorer.bloxberg.org/address/\" + d.source + \"' target='_blank'>\" + d.source + \"</a></p>\";\r\n                }\r\n                if(d.nodeAddress === d.target) {\r\n                    document.getElementById(\"address_information\").innerHTML =\r\n                            \" <p class='labels'>Type:</p><p class='values'>\" + d.typeTarget + \"</p>\"\r\n                            + \"<p class='labels'>Address:</p><p class='values'><a href='https://blockexplorer.bloxberg.org/address/\" + d.target + \"' target='_blank'>\" + d.target + \"</a></p>\";\r\n                }\r\n            })\r\n            .on(\"mousedown\", function (d) {\r\n\r\n                console.log(\"----- Node Information -----\");\r\n                console.log(\"nodeAddress: \" + d.nodeAddress);\r\n                console.log(\"source: \" + d.source);\r\n                console.log(\"target: \" + d.target);\r\n                console.log(\"typeSource:   \" + d.typeSource);\r\n                console.log(\"typeTarget:   \" + d.typeTarget);\r\n\r\n                this.zoomEnable = false;\r\n                // console.log(\"ZoomEnabled? \" + this.zoomEnable);\r\n                d3.select('#container').select('svg').call(d3.behavior.zoom().on(\"zoom\", null));\r\n            })\r\n            .on(\"mouseup\", function () {\r\n                this.zoomEnable = true;\r\n                // console.log(\"ZoomEnabled? \" + this.zoomEnable);\r\n                d3.select('#container').select('svg').call(zoom);\r\n            })\r\n            .on(\"focus\", function () {\r\n                d3.select(this).style(\"border-color\", \"red\"); // fehlerhaft\r\n            });\r\n\r\n        function tick(e) {\r\n\r\n            node.attr('cx', function (d) { return d.x; })\r\n                .attr('cy', function (d) { return d.y; })\r\n                .call(force.drag);\r\n\r\n            link.attr('x1', function (d) { return d.source.x; })\r\n                .attr('y1', function (d) { return d.source.y; })\r\n                .attr('x2', function (d) { return d.target.x; })\r\n                .attr('y2', function (d) { return d.target.y; });\r\n        }\r\n\r\n        function updateZoom() {\r\n            svg.attr(\"transform\",\r\n                \"translate(\" + d3.event.translate + \")\"\r\n                + \" scale(\" + d3.event.scale + \")\");\r\n        }\r\n\r\n        console.log(\"Graph drawed.\");\r\n    }\r\n\r\n    timeStap() {\r\n        return Math.floor(Date.now());\r\n    }\r\n    calculationTime(startTime, endTime) {\r\n        console.log(\"Graph created in \" + (endTime - startTime) / 1000 + \" seconds.\");\r\n    }\r\n\r\n    showLoader() {\r\n        document.getElementById(\"address_information\").innerHTML = \"Select a node for node information.\";\r\n        document.getElementById(\"address_information\").style.visibility = \"hidden\";\r\n        document.getElementById(\"container\").style.visibility = \"hidden\";\r\n        document.getElementById(\"loader\").style.visibility = \"visible\";\r\n    }\r\n\r\n    hideLoader() {\r\n        document.getElementById(\"address_information\").style.visibility = \"visible\";\r\n        document.getElementById(\"container\").style.visibility = \"visible\";\r\n        document.getElementById(\"loader\").style.visibility = \"hidden\";\r\n        document.getElementById(\"progress\").style.width = \"0%\";\r\n        document.getElementById(\"progress\").innerHTML = \"0%\";\r\n    }\r\n\r\n    scrollAnimation() {\r\n        document.getElementById(\"address_information\").scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"start\",\r\n            inline: \"nearest\"\r\n        });\r\n    }\r\n\r\n    widthResizeListener() {\r\n        window.onresize = function () {\r\n            document.getElementsByTagName(\"svg\")[0].style.width = document.getElementById(\"address_information\").offsetWidth - 2;\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        console.log(\"Component will mount.\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Component did mount.\");\r\n\r\n        let startTime = this.timeStap();\r\n\r\n        this.showLoader();\r\n        this.responseObject.getData(this.props.page, this.props.offset, this.props.depth).then((promise) => {\r\n            this.hideLoader();\r\n            this.createGraph(promise);\r\n\r\n            let endTime = this.timeStap();\r\n            this.calculationTime(startTime, endTime);\r\n\r\n            this.scrollAnimation();\r\n            this.widthResizeListener();\r\n        });\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        console.log(\"Component will update.\");\r\n\r\n        let startTime = this.timeStap();\r\n\r\n        this.showLoader();\r\n        this.responseObject.getData(nextProps.page, nextProps.offset, nextProps.depth).then((promise) => {\r\n            this.hideLoader();\r\n            this.createGraph(promise);\r\n\r\n            let endTime = this.timeStap();\r\n            this.calculationTime(startTime, endTime);\r\n\r\n            this.scrollAnimation();\r\n            this.widthResizeListener();\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"Component did update.\");\r\n    }\r\n\r\n    render() {\r\n        return (<div id=\"container\"></div>);\r\n    }\r\n}\r\n\r\nexport default GraphCreator;","import React, {Component} from 'react';\r\nimport './styles.css';\r\nimport GraphCreator from './GraphCreator';\r\n\r\nclass VBN extends Component {\r\n\r\n    state = {\r\n      page: 0,\r\n      offset: 0,\r\n      depth: 0\r\n    };\r\n  \r\n    render() {\r\n  \r\n      let graph = (this.state.page !== 0) ? <GraphCreator page={this.state.page} offset={this.state.offset} depth={this.state.depth} /> : null;\r\n  \r\n      const maxPage = 100;\r\n      const maxOffset = 1800;\r\n      const maxDepth = 5;\r\n  \r\n      const pageSelectedValue = 2;\r\n      const offsetSelectedValue = 1;\r\n      const depthSelectedValue = 0;\r\n  \r\n      const pageSelectOptions = [];\r\n      for(let i = 1; i <= maxPage; i++) {\r\n        pageSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n      }\r\n      const offsetSelectOptions = [];\r\n      for(let i = 1; i <= maxOffset; i++) {\r\n        offsetSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n      }\r\n      const depthSelectOptions = [];\r\n      for(let i = 0; i <= maxDepth; i++) {\r\n        depthSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n      }\r\n  \r\n      return (\r\n        <div className=\"VBN\">\r\n          <div id=\"banner\">\r\n            <h1 className=\"title\">Visualisation of Bloxberg-Network</h1>\r\n          </div>\r\n          <div id=\"site_informaiton\">\r\n            <p>This website will produce a force directed d3 graph, that will visualizise the Bloxberg Network<br/>\r\n            by using the <a href=\"https://blockexplorer.bloxberg.org/api_docs\" target=\"_blank\">Bloxberg RPC API</a> and the <a href=\"https://web3js.readthedocs.io/en/v1.3.0/\" target=\"_blank\">Web3</a> framework for JavaScript.</p>\r\n          </div>\r\n          <div id=\"values_informaiton\">\r\n            <p id=\"text\">\r\n              <b>Page</b> represents the page number to be used for pagination.\r\n            </p>\r\n            <p id=\"text\">\r\n              <b>Offset</b> represents the maximum number of records to return when paginating.\r\n            </p>\r\n            <p id=\"text\">\r\n              <b>Depth</b> represents how deep the http requests will search into to network.\r\n            </p>\r\n          </div>\r\n          <div id=\"control\">\r\n            <label>Page:</label>\r\n            <select id=\"page_selection\" defaultValue={pageSelectedValue}>\r\n              {pageSelectOptions}\r\n            </select>\r\n            <label>Offset:</label>\r\n            <select id=\"offset_selection\" defaultValue={offsetSelectedValue}>\r\n              {offsetSelectOptions}\r\n            </select>\r\n            <label>Depth:</label>\r\n            <select id=\"depth_selection\" defaultValue={depthSelectedValue}>\r\n              {depthSelectOptions}\r\n            </select>\r\n            <input type=\"submit\" id=\"button\" value=\"Create Graph\" onClick={() => {\r\n  \r\n              let page = document.getElementById(\"page_selection\").value;\r\n              let offset = document.getElementById(\"offset_selection\").value;\r\n              let depth = document.getElementById(\"depth_selection\").value;\r\n  \r\n              console.log(\"page -> \" + page);\r\n              console.log(\"offset -> \" + offset);\r\n              console.log(\"depth -> \" + depth);\r\n  \r\n              this.setState({ page: page, offset: offset, depth: depth});\r\n              \r\n            }} />\r\n          </div>\r\n          <div id=\"loader\" style={{visibility: \"visable\"}}>\r\n            <div id=\"progressbar\">\r\n              <div id=\"progress\"></div>\r\n              <p id=\"loading_informaiton\">Loading...</p>\r\n            </div>\r\n          </div>\r\n          <div id=\"address_information\">\r\n            <p class=\"labels\">Select a node for node information.</p>\r\n          </div>\r\n          <div id=\"graph_box\">\r\n            {graph}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  export default VBN;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport './App.css';\r\nimport AddressViewer from './modules/address_viewer/code/AddressViewer';\r\nimport VBN from './modules/vbn/code/VBN';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n\r\n        <div className=\"App\">\r\n\r\n        <div id=\"navigation\">\r\n              <ul id=\"nav-links\">\r\n                <Link to=\"/AddressViewer\" class=\"link\">\r\n                  <li>AddressViewer</li>\r\n                </Link>\r\n                <Link to=\"/VBN\" class=\"link\">\r\n                  <li>VBN</li>\r\n                </Link>\r\n              </ul>\r\n\r\n          </div>\r\n\r\n          <Switch>\r\n            <Route path=\"/AddressViewer\" exact component={AddressViewer} />\r\n            <Route path=\"/VBN\" exact component={VBN} />\r\n          </Switch>\r\n\r\n        </div>\r\n\r\n      </Router>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}