{"version":3,"sources":["modules/DataCollector.js","modules/GraphCreator.js","App.js","serviceWorker.js","index.js"],"names":["DataCollector","props","page","offset","stage","this","getContractList","contractList","console","log","getTransactionFromContractList","transactionList","url","fetch","then","response","json","result","contract","transactions","counter","Address","arrays","length","Object","keys","array","i","push","source","from","target","to","type","found","j","p","Math","round","document","getElementById","innerHTML","style","width","React","Component","GraphCreator","responseObject","promise","graphBoxHeight","window","innerHeight","offsetHeight","height","innerWidth","links","nodes","forEach","link","svgWidth","offsetWidth","svgHeight","svg","d3","append","attr","call","zoom","on","translate","scale","force","size","e","node","d","x","y","drag","linkDistance","charge","index","start","selectAll","data","enter","stopImmediatePropagation","visibility","scrollIntoView","behavior","block","inline","onresize","getElementsByTagName","showLoader","getData","hideLoader","createGraph","scrollAnimation","widthResizeListener","nextProps","id","App","state","graph","pageSelectOptions","key","value","offsetSelectOptions","stageSelectOptions","className","href","defaultValue","onClick","setState","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.794e7d2e.chunk.js","sourcesContent":["import { transition } from 'd3';\r\nimport React from 'react';\r\n\r\nclass DataCollector extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async getData(page, offset, stage) {\r\n\r\n        // get contract list\r\n        let contractList = await this.getContractList(page, offset);\r\n        console.log(\"Get contractlist:\");\r\n        console.log(contractList);\r\n\r\n        // get transactions from contract list\r\n        let transactionList = await this.getTransactionFromContractList(contractList);\r\n        console.log(\"Get transactionlist from contractlist:\");\r\n        console.log(transactionList);\r\n\r\n        return transactionList;\r\n\r\n        // iterate over accounts\r\n        //for (let i = 0; i < offset; i++) {\r\n\r\n        //}\r\n    }\r\n\r\n    async getContractList(page, offset) {\r\n\r\n        const url = 'https://blockexplorer.bloxberg.org/api/api?module=contract&action=listcontracts&page=' + page + '&offset=' + offset;\r\n\r\n        let contractList = await fetch(url).then(response => response.json());\r\n\r\n        return contractList.result;\r\n    }\r\n\r\n    async getTransactionList(contract) {\r\n\r\n        let url = 'https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=' + contract;\r\n\r\n        let transactionList = await fetch(url).then(response => response.json());\r\n\r\n        console.log(\"getTransactionList: \" + transactionList);\r\n\r\n        return null;\r\n    }\r\n\r\n    async getTransactionFromContractList(contractList) {  // 0x97c314818fbe22b4b5d5Ea75E52E726271aFAE3b  \r\n\r\n        let transactions = [];\r\n\r\n        let counter = 0;\r\n        for(const contract of contractList) {\r\n            let url = 'https://blockexplorer.bloxberg.org/api/api?module=account&action=txlist&address=';\r\n            //console.log(\"ContractAddress: \" + contract.Address);\r\n            url = url + contract.Address;\r\n\r\n            let arrays = await fetch(url).then(contractList => contractList.json());\r\n            //let transactions = [];\r\n\r\n            let length = Object.keys(arrays.result).length;\r\n            let array = arrays.result;\r\n\r\n            for (let i = 0; i < length; i++) {\r\n\r\n                if (transactions.length === 0) {\r\n                    transactions.push({ source: array[i].from, target: array[i].to, type: \"contract\" });\r\n\r\n                }\r\n\r\n                let found = 0;\r\n                for (let j = 0; j < transactions.length; j++) {\r\n\r\n                    if (transactions[j].source === array[i].from && transactions[j].target === array[i].to) {\r\n                        found = 1;\r\n                    }\r\n\r\n                }\r\n                if (found === 0 && array[i].to !== \"\") {\r\n                    transactions.push({ source: array[i].from, target: array[i].to, type: \"contract\" });\r\n                }\r\n\r\n            }\r\n\r\n            counter++;\r\n            //Array.prototype.push.apply(transactionList, transactions);\r\n            //transactionList.push(transactions);\r\n            console.log(transactions);\r\n\r\n            let p = Math.round( counter * 100 /  contractList.length * 100 ) / 100;\r\n            document.getElementById(\"progress\").innerHTML = p + \"%\";\r\n            document.getElementById(\"progress\").style.width = p + \"%\";\r\n        }\r\n\r\n        //console.log(\"transactions\");\r\n        //console.log(transactions);\r\n\r\n        return transactions;\r\n    }\r\n\r\n    parseHTTPResponse(response) {\r\n\r\n        console.log(\"parseHTTPresponse\");\r\n\r\n        let transactions = [];\r\n\r\n        let length = Object.keys(response).length;\r\n        let array = response;\r\n\r\n        /*\r\n        for(let i = 0; i < length; i++) {\r\n            transactions.push({ source: array[i].from, target: array[i].to });\r\n        } */\r\n\r\n        for (let i = 0; i < length; i++) {\r\n\r\n            if (transactions.length === 0) {\r\n                transactions.push({ source: array[i].from, target: array[i].to });\r\n\r\n            }\r\n\r\n            let found = 0;\r\n            for (let j = 0; j < transactions.length; j++) {\r\n\r\n                if (transactions[j].source === array[i].from && transactions[j].target === array[i].to) {\r\n                    found = 1;\r\n                }\r\n\r\n            }\r\n            if (found === 0 && array[i].to !== \"\") {\r\n                transactions.push({ source: array[i].from, target: array[i].to });\r\n            }\r\n\r\n        }\r\n        /*\r\n                    for(let i = 0; i < this.transactions.length; i++) {\r\n                        let count = 0;\r\n                        for(let j = 0; j < length; j++) {\r\n                            if(this.transactions[i].source === array[j].from && this.transactions[i].target === array[j].to) {\r\n                                count++;\r\n                            }\r\n                        }\r\n                        this.transactions[i].count = count;\r\n                    }*/\r\n\r\n        return transactions;\r\n    }\r\n}\r\n\r\nexport default DataCollector;","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport './styles.css';\r\nimport DataCollector from './DataCollector';\r\n\r\nclass GraphCreator extends React.Component {\r\n\r\n    responseObject = null;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Consturctor.\")\r\n        console.log(props);\r\n        this.responseObject = new DataCollector(); // new DataCollector().getData(\"0x0d81b4b37EddC9C262198A82B51470aa1eBa14C4\");  // 0x4945d63B509e137b0293Bd958cf97B61996c0fB9       // 0xC91a26a4351c6b351Cc2231e9c7bE7dd7D4a7036\r\n    }\r\n\r\n    createGraph(promise) {\r\n        console.log(\"create graph:\");\r\n\r\n        let graphBoxHeight = window.innerHeight - document.getElementById(\"address_information\").offsetHeight;\r\n        document.getElementById(\"graph_box\").style.height = graphBoxHeight + \"px\";\r\n\r\n        let height = graphBoxHeight;\r\n        let width = window.innerWidth ;\r\n\r\n        let links = promise;\r\n\r\n        console.log(\"links\");\r\n        console.log(links);\r\n\r\n\r\n        let testNodes = [\r\n            { source: \"0x2030bed7b300cef3d4455c8f665d58a4be4e82f5\", target: \"\", type: \"contract\" },\r\n            { source: \"0xd7bcafc640fc76def22fd2c64e3f53936a3047ca\", target: \"0xad1ae4665bb880a96faae3576c49bf01040e74e6\", type: \"contract\" },\r\n            { source: \"0xab59a1ea1ac9af9f77518b9b4ad80942ade35088\", target: \"0x0215627f70f416c1f9ea89085ac956c00c657447\", type: \"contract\" },\r\n            { source: \"0xab59a1ea1ac9af9f77518b9b4ad80942ade35088\", target: \"0x9ba3558b9d6289d8a5fbd76bfa78423174aac7bf\", type: \"contract\" },\r\n            { source: \"0xd748bf41264b906093460923169643f45bdbc32e\", target: \"0xa63cdbc37e9434b11350087279e9c11a4b4ba8fe\", type: \"contract\" },\r\n            { source: \"0xd748bf41264b906093460923169643f45bdbc32e\", target: \"0x97a9f79875087c6e78c446a725aab43c4555acbf\", type: \"contract\" }\r\n\r\n            /*{source: \"0x2030bed7b300cef3d4455c8f665d58a4be4e82f5\", target: \"\"},\r\n            {source: \"0xd7bcafc640fc76def22fd2c64e3f53936a3047ca\", target: \"0xad1ae4665bb880a96faae3576c49bf01040e74e6\"},\r\n            {source: \"0xab59a1ea1ac9af9f77518b9b4ad80942ade35088\", target: \"0x0215627f70f416c1f9ea89085ac956c00c657447\"},\r\n            {source: \"0xab59a1ea1ac9af9f77518b9b4ad80942ade35088\", target: \"0x9ba3558b9d6289d8a5fbd76bfa78423174aac7bf\"},\r\n            {source: \"0xd748bf41264b906093460923169643f45bdbc32e\", target: \"0xa63cdbc37e9434b11350087279e9c11a4b4ba8fe\"},\r\n            {source: \"0xd748bf41264b906093460923169643f45bdbc32e\", target: \"0x97a9f79875087c6e78c446a725aab43c4555acbf\"} */\r\n\r\n\r\n        ]\r\n\r\n        // links = testNodes;\r\n\r\n        // create empty nodes array\r\n        let nodes = {};\r\n\r\n        // compute nodes from links data\r\n        links.forEach(function (link) {\r\n            link.source = nodes[link.source] ||\r\n                (nodes[link.source] = { source: link.source });\r\n            link.target = nodes[link.target] ||\r\n                (nodes[link.target] = { target: link.target, type: link.type });\r\n        });\r\n\r\n        console.log(nodes);\r\n\r\n        //let svgWidth = width - 40;\r\n        let svgWidth = document.getElementById(\"address_information\").offsetWidth - 2;\r\n        let svgHeight = height - 20;\r\n\r\n        //document.getElementById(\"address_information\").style.width = svgWidth + \"px\";\r\n\r\n        document.getElementById(\"container\").innerHTML = \"\";\r\n        // add a SVG to the body for our viz\r\n        let svg = d3.select('#container').append('svg')\r\n            .attr('width', svgWidth)\r\n            .attr('height', svgHeight)\r\n            .call(d3.behavior.zoom().on(\"zoom\", redraw))\r\n            .append(\"g\");\r\n\r\n        // use the force\r\n        let force = d3.layout.force() //build the layout\r\n            .size([svgWidth, svgHeight]) //specified earlier\r\n            .nodes(d3.values(nodes)) //add nodes\r\n            .links(links) //add links\r\n            .on(\"tick\", tick) //what to do\r\n            .linkDistance(300) //set for proper svg size\r\n            .charge(function (d) {\r\n                var charge = -200;\r\n                if (d.index === 0) charge = 2.5 * charge;\r\n                return charge;\r\n            })\r\n            .start(); //kick the party off!\r\n\r\n        // add the links\r\n        let link = svg.selectAll('.link')\r\n            .data(links)\r\n            .enter().append('line')\r\n            .attr('class', 'link');\r\n\r\n        // add the nodes\r\n        let node = svg.selectAll('.node')\r\n            .data(force.nodes()) //add\r\n            .enter().append('circle')\r\n            .style(\"fill\", function (d) {\r\n                if (d.type === \"contract\") {\r\n                    return \"orange\";\r\n                }\r\n            })\r\n            .attr('class', 'node')\r\n            .attr('r', width * 0.005) //radius of circle\r\n            .on(\"click\", function (d) {\r\n                d3.event.stopImmediatePropagation();\r\n                if (typeof d.source === \"undefined\") {\r\n                    document.getElementById(\"address_information\").innerHTML = \"<a href='https://blockexplorer.bloxberg.org/address/\" + d.target + \"' target='_blank'>\" + d.target + \"</a>\";\r\n                } else {\r\n                    document.getElementById(\"address_information\").innerHTML = \"<a href='https://blockexplorer.bloxberg.org/address/\" + d.source + \"' target='_blank'>\" + d.source + \"</a>\";\r\n                }\r\n\r\n            });\r\n\r\n        function tick(e) {\r\n\r\n            node.attr('cx', function (d) { return d.x; })\r\n                .attr('cy', function (d) { return d.y; })\r\n                .call(force.drag);\r\n\r\n            link.attr('x1', function (d) { return d.source.x; })\r\n                .attr('y1', function (d) { return d.source.y; })\r\n                .attr('x2', function (d) { return d.target.x; })\r\n                .attr('y2', function (d) { return d.target.y; });\r\n        }\r\n\r\n        function redraw() {\r\n            svg.attr(\"transform\",\r\n                \"translate(\" + d3.event.translate + \")\"\r\n                + \" scale(\" + d3.event.scale + \")\");\r\n          } \r\n\r\n        console.log(\"graph drawed.\");\r\n    }\r\n\r\n    showLoader() {\r\n        document.getElementById(\"address_information\").innerHTML = \"<br/>\";\r\n        document.getElementById(\"address_information\").style.visibility = \"hidden\";\r\n        document.getElementById(\"container\").style.visibility = \"hidden\";\r\n        document.getElementById(\"loader\").style.visibility = \"visible\";\r\n    }\r\n\r\n    hideLoader() {\r\n        document.getElementById(\"address_information\").style.visibility = \"visible\";\r\n        document.getElementById(\"container\").style.visibility = \"visible\";\r\n        document.getElementById(\"loader\").style.visibility = \"hidden\";\r\n        document.getElementById(\"progress\").style.width = \"0%\";\r\n        document.getElementById(\"progress\").innerHTML = \"0%\";\r\n    }\r\n\r\n    scrollAnimation() {\r\n        document.getElementById(\"address_information\").scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"start\",\r\n            inline: \"nearest\"\r\n          });\r\n    }\r\n\r\n    widthResizeListener() {\r\n        window.onresize = function () {\r\n            document.getElementsByTagName(\"svg\")[0].style.width = document.getElementById(\"address_information\").offsetWidth - 2;\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        console.log(\"Component will mount.\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Component did mount.\");\r\n        this.showLoader();\r\n        this.responseObject.getData(this.props.page, this.props.offset, this.props.stage).then((promise) => {\r\n            this.hideLoader();\r\n            this.createGraph(promise);\r\n\r\n            this.scrollAnimation();\r\n            this.widthResizeListener();\r\n        });\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        console.log(\"Component will update.\");\r\n        this.showLoader();\r\n        this.responseObject.getData(nextProps.page, nextProps.offset, nextProps.stage).then((promise) => {\r\n            this.hideLoader();\r\n            this.createGraph(promise);\r\n\r\n            this.scrollAnimation();\r\n            this.widthResizeListener();\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    componentDidUpdate() {\r\n        \r\n        console.log(\"Component did update.\");\r\n    }\r\n\r\n    render() {\r\n        return (<div id=\"container\"></div>);\r\n    }\r\n}\r\n\r\nexport default GraphCreator;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport GraphCreator from './modules/GraphCreator';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    page: 0,\r\n    offset: 0,\r\n    stage: 0\r\n  };\r\n\r\n  render() {\r\n\r\n    let graph = (this.state.page !== 0) ? <GraphCreator page={this.state.page} offset={this.state.offset} stage={this.state.stage} /> : null;\r\n\r\n    const maxPage = 100;\r\n    const maxOffset = 1800;\r\n    const maxStage = 5;\r\n\r\n    const pageSelectedValue = 2;\r\n    const offsetSelectedValue = 1;\r\n    const stageSelectedValue = 1;\r\n\r\n    const pageSelectOptions = [];\r\n    for(let i = 1; i <= maxPage; i++) {\r\n      pageSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n    }\r\n    const offsetSelectOptions = [];\r\n    for(let i = 1; i <= maxOffset; i++) {\r\n      offsetSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n    }\r\n    const stageSelectOptions = [];\r\n    for(let i = 1; i <= maxStage; i++) {\r\n      stageSelectOptions.push(<option key={i} value={i}>{i}</option>);\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div id=\"banner\">\r\n          <h1 className=\"title\">Visualisation of Bloxsberg-Network</h1>\r\n        </div>\r\n        <div id=\"site_informaiton\">\r\n          <p>This website will produce a force directed d3 graph that will visualizise the Bloxberg Network by using the <a href=\"https://blockexplorer.bloxberg.org/api_docs\">Bloxberg RPC API</a>.</p>\r\n        </div>\r\n        <div id=\"values_informaiton\">\r\n          <p id=\"text\">\r\n            <b>Page</b> represents the page number to be used for pagination.\r\n          </p>\r\n          <p id=\"text\">\r\n            <b>Offset</b> represents the maximum number of records to return when paginating\r\n          </p>\r\n          <p id=\"text\">\r\n            <b>Stage</b> represents how deep the http requests will search into to network.\r\n          </p>\r\n        </div>\r\n        <div id=\"control\">\r\n          <label>Page:</label>\r\n          <select id=\"page_selection\" defaultValue={pageSelectedValue}>\r\n            {pageSelectOptions}\r\n          </select>\r\n          <label>Offset:</label>\r\n          <select id=\"offset_selection\" defaultValue={offsetSelectedValue}>\r\n            {offsetSelectOptions}\r\n          </select>\r\n          <label>Stage:</label>\r\n          <select id=\"stage_selection\" defaultValue={stageSelectedValue}>\r\n            {stageSelectOptions}\r\n          </select>\r\n          <input type=\"submit\" id=\"button\" value=\"Start\" onClick={() => {\r\n\r\n            let page = document.getElementById(\"page_selection\").value;\r\n            let offset = document.getElementById(\"offset_selection\").value;\r\n            let stage = document.getElementById(\"stage_selection\").value;\r\n\r\n            console.log(\"page -> \" + page);\r\n            console.log(\"offset -> \" + offset);\r\n            console.log(\"stage -> \" + stage);\r\n\r\n            this.setState({ page: page, offset: offset, stage: stage});\r\n            \r\n          }} />\r\n        </div>\r\n        <div id=\"loader\" style={{visibility: \"visable\"}}>\r\n          <div id=\"progressbar\">\r\n            <div id=\"progress\"></div>\r\n            <p>Loading...</p>\r\n          </div>\r\n        </div>\r\n        <div id=\"address_information\">\r\n          <br/>\r\n        </div>\r\n        <div id=\"graph_box\">\r\n          {graph}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}